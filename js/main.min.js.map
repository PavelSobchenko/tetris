{"version":3,"sources":["Constants.js","Helper.js","Cell.js","FigureCollection.js","CanvasGlobal.js","Canvas.js","NextFigure.js","Panel.js","Page.js"],"names":["app","const","WIDTH","HEIGHT","CELL","SPEED_START","SPEED_MAX","SPEED_STEP","SIZE_FIGURE","STROKE_STYLE","FILL_STYLE","REMOVE_CELL_ANIMATION_TIME","END_LOOP","REMOVE_ROW","FIGURE_COLORS","I","C","L","RL","T","Z","RZ","r","c","ROW_WIDTH","FIGURE","x","y","left","center","right","TYPE_MAP","TRANSFORM_MAP","POSITION_MAP","classes","helper","getRandomInt","min","max","Math","floor","random","CellModel","Backbone","Model","extend","defaults","stroke","fill","FigureCollection","Collection","model","initialize","createFigure","intg","this","currentState","type","reset","setColor","each","cell","set","bind","getNewArr","data","position","map","l","tmp","i","item","_","isString","at","get","name","push","rotateSuccess","getCustom","setCustom","config","Canvas","View","ctx","el","getContext","cellRect","setCtx","fillStyle","strokeStyle","drawCell","strokeRect","fillRect","clear","clearRect","CanvasView","height","width","prototype","apply","speed","statePlaying","blockMoveDown","removeRow","CC","FC","eventDispatcher","on","startLoop","$","window","keyUpController","keyDownController","render","moveFigure","draw","check","e","keyCode","play","ctrl","ctrlKey","endLoop","gameOver","rotate","console","log","stop","gameOverState","trigger","checkLeft","collection","cells","where","result","fillCell","findWhere","checkRight","cont","find","checkFillRow","group","groupBy","row","arr","length","sortBy","removeFillRow","tmpCollection","add","no_valid_cell","rand","direct","playId","setInterval","clearInterval","drawFigures","interval","remove","pop","NextFigureView","PanelView","points","updatePoints","$el","text","Page","views","models","collections","Events","canvas","panel","next_figure","startPlay","document","ready","page"],"mappings":"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","file":"main.min.js","sourcesContent":["var app = app || {};\n\n(function () {\n    app.const = {\n        // canvas\n        WIDTH: 240,\n        HEIGHT: 304,\n        CELL: 16,\n        SPEED_START: 5,\n        SPEED_MAX: 45,\n        SPEED_STEP: 10,\n        SIZE_FIGURE: 4,\n        STROKE_STYLE: '#000',\n        FILL_STYLE: '#333',\n        REMOVE_CELL_ANIMATION_TIME: 50, // ms\n        \n        // points\n        END_LOOP: 10,\n        REMOVE_ROW: 100,\n\n        // figure colors\n        FIGURE_COLORS: {\n            I: ['#1464e5', '#3b6cba'], // fill\\stroke\n            C: ['#fc2d2d', '#bf1616'],\n            L: ['#f9921b', '#e87f06'],\n            RL: ['#e9fc1b', '#d5e80d'],\n            T: ['#6aed1e', '#5bd813'],\n            Z: ['#3afca8', '#20d888'],\n            RZ: ['#853ff4', '#6015d8']\n        }\n    };\n    var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n\n    // count cells in one row\n    app.const.ROW_WIDTH = app.const.WIDTH/r;\n\n    // figures\n    app.const.FIGURE = [\n        [\n            {x:(c-(r*2)), y:-r, left: true},\n            {x:(c-r), y:-r},\n            {x:c, y:-r, center: true},\n            {x:(c+r), y:-r, right: true}\n        ], // row\n        [\n            {x:(c-r), y:-(r*2), left: true},\n            {x:c, y:-(r*2), right: true},\n            {x:(c-r), y:-r, left: true},\n            {x:c, y:-r, right:true}\n        ], // rect\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, left: true},\n            {x:(c+r), y:-r, right: true}\n        ], // L\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, right: true},\n            {x:c-r, y:-r, left: true}\n        ], // RL\n        [\n            {x:c,y:0-r, right: true, left: true},\n            {x:(c-r),y:-(r*2) , left: true},\n            {x:c,y:0-(r*2), center: true},\n            {x:(c+r),y:-(r*2), right: true}\n        ], // T\n        [\n            {x:c-r, y: 0-(r*2), left: true},\n            {x:c, y: 0-(r*2), right: true, center: true},\n            {x:c, y: 0-r, left: true},\n            {x:c+r, y: 0-r, right: true}\n        ], // Z\n        [\n            {x: c+r, y: 0-(r*2), right: true},\n            {x: c, y: 0-(r*2), center: true, left: true},\n            {x: c, y: 0-r, right: true},\n            {x: c-r, y: 0-r, left: true}\n        ] // RZ\n    ];\n    app.const.TYPE_MAP = ['I', 'C', 'L', 'RL', 'T', 'Z', 'RZ'];\n    app.const.TRANSFORM_MAP = {\n        'I': [\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]],\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]]\n        ],\n        'L': [\n            [[1, 1], null, [-1, -1], [-2, 0]],\n            [[-1, 1], null, [1, -1], [0, -2]],\n            [[-1, -1], null, [1, 1], [2, 0]],\n            [[1, -1], null, [-1, 1], [0, 2]]\n        ],\n        'RL': [\n            [[1, 1], null, [-1, -1], [0, -2]],\n            [[-1, 1], null, [1, -1], [2, 0]],\n            [[-1, -1], null, [1, 1], [0, 2]],\n            [[1, -1], null, [-1, 1], [-2, 0]]\n        ],\n        'T': [\n            ['1', [1, -1], null, '0'],\n            ['1', [1, 1], null, '0'],\n            ['1', [-1, 1], null, '0'],\n            ['1', [-1, -1], null, '0']\n        ],\n        'Z': [\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]],\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]]\n        ],\n        'RZ': [\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]],\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]]\n        ]\n    };\n    app.const.POSITION_MAP = {\n        'I': [\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r'],\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r']\n        ],\n        'L': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'r', 'l'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'l', 'r']\n        ],\n        'RL': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r']\n        ],\n        'T': [\n            ['l', ['l', 'r'], ['c', 'r'], ['l', 'r']],\n            [['l', 'r'], 'r', 'c', 'l'],\n            ['r', ['l', 'r'], ['l', 'c'], ['l', 'r']],\n            [['l', 'r'], 'l', 'c', 'r']\n        ],\n        'Z': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r']\n        ],\n        'RZ': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l']\n        ]\n    };\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    \n    app.classes = app.classes || {}; \n    \n    app.classes.helper = {\n        getRandomInt: function (min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n    };\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.CellModel = Backbone.Model.extend({\n        defaults: {\n            x: 0,\n            y: 0,\n            left: false,\n            right: false,\n            center: false,\n            stroke: '',\n            fill: ''\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.FigureCollection = Backbone.Collection.extend({\n        model: app.CellModel,\n        initialize: function () {\n\n        },\n        createFigure: function (intg) {\n            var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n            this.currentState = 0;\n            this.type = app.const.TYPE_MAP[intg];\n            this.reset(app.const.FIGURE[intg]);\n            this.setColor();\n        },\n        setColor: function () {\n            this.each(function (cell) {\n                cell.set({\n                    'fill': app.const.FIGURE_COLORS[this.type][0],\n                    'stroke': app.const.FIGURE_COLORS[this.type][1]\n                });\n            }.bind(this));\n        },\n        getNewArr: function () {\n            if(this.currentState > 3)\n                this.currentState = 0;\n\n            var data = app.const.TRANSFORM_MAP[this.type][this.currentState];\n            var position = app.const.POSITION_MAP[this.type][this.currentState];\n            var map = {\n                'l': 'left',\n                'r': 'right',\n                'c': 'center'\n            };\n            var tmp = [];\n            var r = app.const.CELL;\n\n            this.each(function (cell, i) {\n                var item = {};\n\n                if(data[i]) {\n                    if(_.isString(data[i])) {\n                        item.x = this.at(data[i]).get('x');\n                        item.y = this.at(data[i]).get('y');\n                    } else {\n                        item.x = cell.get('x') + (data[i][0]*r);\n                        item.y = cell.get('y') + (data[i][1]*r);\n                    }\n                } else {\n                    item.x = cell.get('x');\n                    item.y = cell.get('y');\n                }\n\n                if(position[i]) {\n                    if(_.isString(position[i])) {\n                        item[map[position[i]]] = true;\n                    } else {\n                        _.each(position[i], function (name) {\n                            item[map[name]] = true;\n                        });\n                    }\n                }\n                tmp.push(item);\n            }.bind(this));\n\n            return tmp;\n        },\n        rotateSuccess: function () {\n            ++this.currentState;\n        },\n        getCustom: function () {\n            return {\n                type: this.type,\n                currentState: this.currentState\n            }\n        },\n        setCustom: function (config) {\n            this.type = config.type;\n            this.currentState = config.currentState;\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    app.Canvas = Backbone.View.extend({\n\n        initialize: function () {\n            this.ctx = this.el.getContext(\"2d\");\n            this.cellRect = app.const.CELL;\n        },\n\n        setCtx: function (cell) {\n            if(cell) {\n                this.ctx.fillStyle = cell.get('fill') || app.const.FILL_STYLE;\n                this.ctx.strokeStyle = cell.get('stroke') || app.const.STROKE_STYLE;\n            } else {\n                this.ctx.fillStyle = app.const.FILL_STYLE;\n                this.ctx.strokeStyle = app.const.STROKE_STYLE;\n            }\n        },\n\n        drawCell: function (cell) {\n            var x = cell.get('x'),\n                y = cell.get('y');\n            this.setCtx(cell);\n            this.ctx.strokeRect(x, y, this.cellRect-0.5, this.cellRect-0.5);\n            this.ctx.fillRect(x, y, this.cellRect-2, this.cellRect-2);\n        },\n\n        clear: function () {\n            this.ctx.clearRect(0,0, app.const.WIDTH, app.const.HEIGHT);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.CanvasView = app.Canvas.extend({\n        el: '#cnvs',\n        initialize: function () {\n            this.el.height = app.const.HEIGHT;\n            this.el.width = app.const.WIDTH;\n            \n            app.Canvas.prototype.initialize.apply(this);\n            this.setCtx();\n\n            this.speed = app.const.SPEED_START;\n            this.statePlaying = null;\n            this.blockMoveDown = false;\n            this.removeRow = false;\n            this.CC = new app.FigureCollection(); // current figure\n            this.FC = new app.FigureCollection(); // array of filled cells\n\n            app.eventDispatcher.on('startPlay removedFillRow', this.startLoop, this);\n            $(window).on('keyup', this.keyUpController.bind(this));\n            $(window).on('keydown', this.keyDownController.bind(this));\n        },\n        render: function () {\n            if(!this.statePlaying || this.removeRow)\n                return;\n\n            this.moveFigure();\n            this.draw();\n            this.check();\n        },\n\n        // set func\n        keyDownController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            if(e.keyCode == 40 && this.speed < app.const.SPEED_MAX) {\n                this.speed += app.const.SPEED_STEP;\n                this.play();\n            }\n        },\n        keyUpController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            var ctrl = e.ctrlKey;\n            if(ctrl) { // develop helpers\n                if(e.keyCode == 81) { // Q\n                    this.endLoop();\n                    if(!this.removeRow && this.statePlaying)\n                        this.startLoop();\n                }\n                if(e.keyCode == 88) { // X\n                    this.gameOver();\n                }\n            }\n            if(e.keyCode == 40) {\n                this.speed = app.const.SPEED_START;\n                this.play();\n            }\n\n            if(e.keyCode == 37) {\n                this.blockMoveDown = true;\n                this.moveFigure('left');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 39) {\n                this.blockMoveDown = true;\n                this.moveFigure('right');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 38) {\n                if(this.rotate()) {\n                    console.log('rotate');\n                }\n            }\n        },\n        gameOver: function () {\n            this.stop();\n            this.statePlaying = null;\n            this.removeRow = false;\n            this.gameOverState = true;\n            app.eventDispatcher.trigger('gameover');\n            console.log('gameover');\n        },\n\n        // check func\n        // contain logic for collision\n        // right/left/bottom border\n        // check for gameover\n        checkLeft: function (collection) {\n            var cells = collection.where({left: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')-this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x') <= 0 || fillCell) {\n                    result = false;\n                    return true; // break _.each\n                }\n            }.bind(this));\n\n            return result;\n        },\n        checkRight: function (collection) {\n            var cells = collection.where({right: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')+this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x')+this.cellRect >= app.const.WIDTH || fillCell) {\n                    result = false;\n                    return true;\n                }\n            }.bind(this));\n\n            return result;\n        },\n        check: function () {\n            var cont = true; // continue?\n\n            // check for bottom border\n            this.CC.find(function (cell) {\n                if(cell.get('y')+this.cellRect == app.const.HEIGHT) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n                return;\n            }\n\n            // check for fill cells\n            this.CC.find(function (cell) {\n                var x = cell.get('x'), y = cell.get('y')+this.cellRect;\n\n                if(this.FC.findWhere({x: x, y: y})) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n            }\n        },\n        checkFillRow: function () {\n            var group = this.FC.groupBy('y');\n            var row = _.find(group, function (arr) {\n                return arr.length >= app.const.ROW_WIDTH;\n            });\n            if(row) {\n                // TODO: sort wrong\n                row = _.sortBy(row, 'x');\n                app.eventDispatcher.trigger('removeRow', app.const.REMOVE_ROW);\n                this.removeFillRow(row);\n            } else {\n                this.removeRow = false;\n                app.eventDispatcher.trigger('removedFillRow');\n            }\n        },\n        rotate: function () {\n            if(this.CC.type == 'C') // cube is figure without rotate\n                return false;\n\n            var tmpCollection = new app.FigureCollection();\n            tmpCollection.add(this.CC.getNewArr());\n            if(this.checkLeft(tmpCollection) && this.checkRight(tmpCollection)) {\n                var no_valid_cell = tmpCollection.find(function (cell) {\n                    if(cell.get('y')+this.cellRect >= app.const.HEIGHT) {\n                        return cell;\n                    }\n                }.bind(this));\n\n                if(no_valid_cell)\n                    return;\n\n                this.CC.rotateSuccess();\n                tmpCollection.setCustom(this.CC.getCustom());\n                tmpCollection.setColor();\n                this.CC = tmpCollection;\n            }\n        },\n\n        // LOOP\n        startLoop: function () {\n            if(this.removeRow || this.gameOverState)\n                return;\n            var rand = app.classes.helper.getRandomInt(0, 6);\n            this.CC.createFigure(rand);\n            this.play();\n        },\n        endLoop: function () {\n            app.eventDispatcher.trigger('endLoop', app.const.END_LOOP);\n            if(this.CC.find(function (cell) { return cell.get('y') <= 0; })) {\n                this.gameOver();\n            }\n            this.CC.each(function (cell) {\n                this.FC.add(cell);\n            }.bind(this));\n            this.checkFillRow();\n        },\n        moveFigure: function (direct) {\n            if(direct == 'left') {\n                if(this.checkLeft(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')-this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false; // unblock move down\n            } else if(direct == 'right') {\n                if(this.checkRight(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')+this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false;\n            }\n            else if(!this.blockMoveDown) {\n                this.CC.each(function (cell) {\n                    cell.set('y', cell.get('y')+this.cellRect);\n                }.bind(this));\n            }\n        },\n        play: function () {\n            if(this.playId)\n                this.stop();\n            this.playId = setInterval(this.render.bind(this), 1000 / this.speed);\n            this.statePlaying = 'play'\n        },\n        stop: function () {\n            clearInterval(this.playId);\n        },\n\n        // Render func\n        draw: function () {\n            this.clear();\n            this.drawFigures();\n        },\n        drawFigures: function () {\n            this.CC.each(this.drawCell, this);\n            this.FC.each(this.drawCell, this);\n        },\n        removeFillRow: function (row) {\n            this.removeRow = true;\n            var y = row[0].get('y');\n            var interval = setInterval(function () {\n                this.clear();\n                if(!row.length) {\n                    clearInterval(interval);\n                    this.FC.each(function (cell) {\n                        if(cell.get('y')<y)\n                            cell.set('y', cell.get('y')+this.cellRect);\n                    }.bind(this));\n                    this.FC.each(this.drawCell, this);\n                    this.checkFillRow();\n                    return;\n                }\n\n                this.FC.remove(row[row.length-1]);\n                this.FC.each(this.drawCell, this);\n                row.pop();\n            }.bind(this), app.const.REMOVE_CELL_ANIMATION_TIME);\n            this.stop();\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.NextFigureView = Backbone.View.extend({\n        el: '#nextFigure',\n        initialize: function () {\n            this.el.height = app.const.CELL*6;\n            this.el.width = app.const.CELL*6;\n\n            app.Canvas.prototype.initialize.apply(this);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.PanelView = Backbone.View.extend({\n        el: '#panel',\n        points: 0,\n        initialize: function () {\n            // TODO: concat this\n            app.eventDispatcher.on('endLoop', this.updatePoints, this);\n            app.eventDispatcher.on('removeRow', this.updatePoints, this);\n        },\n        updatePoints: function (points) {\n            this.points += points;\n            this.$el.find('.points span').text(this.points);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    var Page = Backbone.View.extend({\n        el: '#page',\n\n        initialize: function () {\n            app.views = {};\n            app.models = {};\n            app.collections = {};\n            app.eventDispatcher = _.extend({}, Backbone.Events );\n\n            app.views.canvas = new app.CanvasView();\n            app.views.panel = new app.PanelView();\n            app.views.next_figure = new app.NextFigureView();\n\n            this.startPlay();\n        },\n        startPlay: function () {\n            app.eventDispatcher.trigger('startPlay');\n        }\n    });\n\n    $(document).ready(function () {\n        app.page = new Page();\n    });\n})();"]}