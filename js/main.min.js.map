{"version":3,"sources":["Constants.js","Helper.js","Cell.js","FigureCollection.js","CanvasGlobal.js","Canvas.js","NextFigure.js","Panel.js","Page.js"],"names":["app","const","WIDTH","HEIGHT","CELL","SPEED_START","SPEED_MAX","SPEED_STEP","SIZE_FIGURE","STROKE_STYLE","FILL_STYLE","REMOVE_CELL_ANIMATION_TIME","END_LOOP","REMOVE_ROW","GAME_OVER_FILL","FIGURE_COLORS","I","C","L","RL","T","Z","RZ","SCORE_SIZE_ROW","r","c","r2","r3","r4","sr","ROW_WIDTH","FIGURE","x","y","left","center","right","TYPE_MAP","TRANSFORM_MAP","POSITION_MAP","NEXT_FIGURE_POSITION","classes","helper","getRandomInt","min","max","Math","floor","random","CellModel","Backbone","Model","extend","defaults","stroke","fill","FigureCollection","Collection","model","initialize","createFigure","intg","this","currentState","type","reset","setColor","moveToCenter","coords","each","cell","i","set","bind","getNewArr","data","position","map","l","tmp","item","_","isString","at","get","name","push","rotateSuccess","getCustom","setCustom","config","Canvas","View","ctx","el","getContext","cellRect","setCtx","fillStyle","strokeStyle","drawCell","strokeRect","fillRect","clear","clearRect","CanvasView","height","width","prototype","apply","textAlign","textBaseline","speed","points","statePlaying","blockMoveDown","removeRow","nextFigureType","readyToStart","CC","FC","eventDispatcher","on","startLoop","updatePoints","$","window","keyUpController","keyDownController","renderCanvasControl","render","moveFigure","draw","check","font","message","desc","gameOverState","text","fillText","e","keyCode","play","trigger","ctrl","ctrlKey","endLoop","gameOver","rotate","console","log","stop","checkLeft","collection","cells","where","result","fillCell","findWhere","checkRight","cont","find","checkFillRow","group","groupBy","row","arr","length","sortBy","removeFillRow","tmpCollection","add","no_valid_cell","direct","playId","setInterval","clearInterval","drawFigures","interval","remove","pop","NextFigureView","NF","PanelView","events","click #playerName span","click #show_all_score","click #reset_score","blur #playerName input","keydown #playerName input","score","allScore","blocks","$el","input","all_score","reset_score","playerName","localStorage","getItem","JSON","parse","removeClass","resetPoints","renderScoreTable","html","j","append","toggleScore","preventDefault","toggleClass","resetScore","addClass","removeItem","setScore","showInputName","hide","val","show","setSelectionRange","keyDownControl","setName","value","setItem","index","sortedIndex","tmpScore","old_item","stringify","Page","views","models","collections","Events","canvas","panel","next_figure","document","ready","page"],"mappings":"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","file":"main.min.js","sourcesContent":["var app = app || {};\n\n(function () {\n    app.const = {\n        // canvas\n        WIDTH: 240,\n        HEIGHT: 304,\n        CELL: 16,\n        SPEED_START: 5,\n        SPEED_MAX: 45,\n        SPEED_STEP: 10,\n        SIZE_FIGURE: 4,\n        STROKE_STYLE: '#000',\n        FILL_STYLE: '#333',\n        REMOVE_CELL_ANIMATION_TIME: 50, // ms\n        \n        // points\n        END_LOOP: 10,\n        REMOVE_ROW: 100,\n\n        GAME_OVER_FILL: 'rgba(11, 1, 28, 0.85)',\n\n        // figure colors\n        FIGURE_COLORS: {\n            I: ['#1464e5', '#3b6cba'], // fill\\stroke\n            C: ['#fc2d2d', '#bf1616'],\n            L: ['#f9921b', '#e87f06'],\n            RL: ['#e9fc1b', '#d5e80d'],\n            T: ['#6aed1e', '#5bd813'],\n            Z: ['#3afca8', '#20d888'],\n            RZ: ['#853ff4', '#6015d8']\n        },\n        \n        // PANEL\n        SCORE_SIZE_ROW: 5\n    };\n    var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2),\n        r2 = r*2, r3 = r*3, r4 = r*4, sr = r/2;\n\n    // count cells in one row\n    app.const.ROW_WIDTH = app.const.WIDTH/r;\n\n    // figures\n    app.const.FIGURE = [\n        [\n            {x:(c-(r*2)), y:-r, left: true},\n            {x:(c-r), y:-r},\n            {x:c, y:-r, center: true},\n            {x:(c+r), y:-r, right: true}\n        ], // row\n        [\n            {x:(c-r), y:-(r*2), left: true},\n            {x:c, y:-(r*2), right: true},\n            {x:(c-r), y:-r, left: true},\n            {x:c, y:-r, right:true}\n        ], // rect\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, left: true},\n            {x:(c+r), y:-r, right: true}\n        ], // L\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, right: true},\n            {x:c-r, y:-r, left: true}\n        ], // RL\n        [\n            {x:c,y:0-r, right: true, left: true},\n            {x:(c-r),y:-(r*2) , left: true},\n            {x:c,y:0-(r*2), center: true},\n            {x:(c+r),y:-(r*2), right: true}\n        ], // T\n        [\n            {x:c-r, y: 0-(r*2), left: true},\n            {x:c, y: 0-(r*2), right: true, center: true},\n            {x:c, y: 0-r, left: true},\n            {x:c+r, y: 0-r, right: true}\n        ], // Z\n        [\n            {x: c+r, y: 0-(r*2), right: true},\n            {x: c, y: 0-(r*2), center: true, left: true},\n            {x: c, y: 0-r, right: true},\n            {x: c-r, y: 0-r, left: true}\n        ] // RZ\n    ];\n    app.const.TYPE_MAP = ['I', 'C', 'L', 'RL', 'T', 'Z', 'RZ'];\n    app.const.TRANSFORM_MAP = {\n        'I': [\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]],\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]]\n        ],\n        'L': [\n            [[1, 1], null, [-1, -1], [-2, 0]],\n            [[-1, 1], null, [1, -1], [0, -2]],\n            [[-1, -1], null, [1, 1], [2, 0]],\n            [[1, -1], null, [-1, 1], [0, 2]]\n        ],\n        'RL': [\n            [[1, 1], null, [-1, -1], [0, -2]],\n            [[-1, 1], null, [1, -1], [2, 0]],\n            [[-1, -1], null, [1, 1], [0, 2]],\n            [[1, -1], null, [-1, 1], [-2, 0]]\n        ],\n        'T': [\n            ['1', [1, -1], null, '0'],\n            ['1', [1, 1], null, '0'],\n            ['1', [-1, 1], null, '0'],\n            ['1', [-1, -1], null, '0']\n        ],\n        'Z': [\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]],\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]]\n        ],\n        'RZ': [\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]],\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]]\n        ]\n    };\n    app.const.POSITION_MAP = {\n        'I': [\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r'],\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r']\n        ],\n        'L': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'r', 'l'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'l', 'r']\n        ],\n        'RL': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r']\n        ],\n        'T': [\n            ['l', ['l', 'r'], ['c', 'r'], ['l', 'r']],\n            [['l', 'r'], 'r', 'c', 'l'],\n            ['r', ['l', 'r'], ['l', 'c'], ['l', 'r']],\n            [['l', 'r'], 'l', 'c', 'r']\n        ],\n        'Z': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r']\n        ],\n        'RZ': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l']\n        ]\n    };\n\n    app.const.NEXT_FIGURE_POSITION = {\n        'I': [[r, r2+sr], [r2, r2+sr], [r3, r2+sr], [r4, r2+sr]],\n        'C': [[r2, r2], [r3, r2], [r2, r3], [r3, r3]],\n        'L': [[r2, r], [r2, r2], [r2, r3], [r3, r3]],\n        'RL': [[r3, r], [r3, r2], [r3, r3], [r2, r3]],\n        'T': [[r2+sr, r3], [r+sr, r2], [r2+sr, r2], [r3+sr, r2]],\n        'Z': [[r+sr, r2], [r2+sr, r2], [r2+sr, r3], [r3+sr, r3]],\n        'RZ': [[r3+sr, r2], [r2+sr, r2], [r2+sr, r3], [r+sr, r3]]\n    };\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    \n    app.classes = app.classes || {}; \n    \n    app.classes.helper = {\n        getRandomInt: function (min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n    };\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.CellModel = Backbone.Model.extend({\n        defaults: {\n            x: 0,\n            y: 0,\n            left: false,\n            right: false,\n            center: false,\n            stroke: '',\n            fill: ''\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.FigureCollection = Backbone.Collection.extend({\n        model: app.CellModel,\n        initialize: function () {\n\n        },\n        createFigure: function (intg) {\n            var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n            this.currentState = 0;\n            this.type = app.const.TYPE_MAP[intg];\n            this.reset(app.const.FIGURE[intg]);\n            this.setColor();\n        },\n        moveToCenter: function () {\n            var coords = app.const.NEXT_FIGURE_POSITION[this.type];\n            this.each(function (cell, i) {\n                cell.set({\n                    'x': coords[i][0],\n                    'y': coords[i][1]\n                });\n            });\n        },\n        setColor: function () {\n            this.each(function (cell) {\n                cell.set({\n                    'fill': app.const.FIGURE_COLORS[this.type][0],\n                    'stroke': app.const.FIGURE_COLORS[this.type][1]\n                });\n            }.bind(this));\n        },\n        getNewArr: function () {\n            if(this.currentState > 3)\n                this.currentState = 0;\n\n            var data = app.const.TRANSFORM_MAP[this.type][this.currentState];\n            var position = app.const.POSITION_MAP[this.type][this.currentState];\n            var map = {\n                'l': 'left',\n                'r': 'right',\n                'c': 'center'\n            };\n            var tmp = [];\n            var r = app.const.CELL;\n\n            this.each(function (cell, i) {\n                var item = {};\n\n                if(data[i]) {\n                    if(_.isString(data[i])) {\n                        item.x = this.at(data[i]).get('x');\n                        item.y = this.at(data[i]).get('y');\n                    } else {\n                        item.x = cell.get('x') + (data[i][0]*r);\n                        item.y = cell.get('y') + (data[i][1]*r);\n                    }\n                } else {\n                    item.x = cell.get('x');\n                    item.y = cell.get('y');\n                }\n\n                if(position[i]) {\n                    if(_.isString(position[i])) {\n                        item[map[position[i]]] = true;\n                    } else {\n                        _.each(position[i], function (name) {\n                            item[map[name]] = true;\n                        });\n                    }\n                }\n                tmp.push(item);\n            }.bind(this));\n\n            return tmp;\n        },\n        rotateSuccess: function () {\n            ++this.currentState;\n        },\n        getCustom: function () {\n            return {\n                type: this.type,\n                currentState: this.currentState\n            }\n        },\n        setCustom: function (config) {\n            this.type = config.type;\n            this.currentState = config.currentState;\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    app.Canvas = Backbone.View.extend({\n\n        initialize: function () {\n            this.ctx = this.el.getContext(\"2d\");\n            this.cellRect = app.const.CELL;\n        },\n\n        setCtx: function (fill, stroke) {\n            this.ctx.fillStyle = fill || app.const.FILL_STYLE;\n            this.ctx.strokeStyle = stroke || app.const.STROKE_STYLE;\n        },\n\n        drawCell: function (cell) {\n            var x = cell.get('x'),\n                y = cell.get('y');\n            this.setCtx(cell.get('fill'), cell.get('stroke'));\n            this.ctx.strokeRect(x, y, this.cellRect-0.5, this.cellRect-0.5);\n            this.ctx.fillRect(x, y, this.cellRect-2, this.cellRect-2);\n        },\n\n        clear: function () {\n            this.ctx.clearRect(0,0, app.const.WIDTH, app.const.HEIGHT);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.CanvasView = app.Canvas.extend({\n        el: '#cnvs',\n        initialize: function () {\n            this.el.height = app.const.HEIGHT;\n            this.el.width = app.const.WIDTH;\n            \n            app.Canvas.prototype.initialize.apply(this);\n            this.setCtx();\n            this.ctx.textAlign = \"center\";\n            this.ctx.textBaseline = \"middle\";\n\n            this.speed = app.const.SPEED_START;\n            this.points = 0;\n\n            this.statePlaying = null;\n            this.blockMoveDown = false;\n            this.removeRow = false;\n            this.nextFigureType = null;\n            this.readyToStart = true;\n\n            this.CC = new app.FigureCollection(); // current figure\n            this.FC = new app.FigureCollection(); // array of filled cells\n\n            app.eventDispatcher.on('startPlay removedFillRow', this.startLoop, this);\n            app.eventDispatcher.on('endLoop', this.updatePoints, this);\n            app.eventDispatcher.on('removeRow', this.updatePoints, this);\n            $(window).on('keyup', this.keyUpController.bind(this));\n            $(window).on('keydown', this.keyDownController.bind(this));\n\n            this.renderCanvasControl();\n        },\n\n        updatePoints: function (points) {\n            this.points += points;\n        },\n\n        render: function () {\n            if(!this.statePlaying || this.removeRow)\n                return;\n\n            this.moveFigure();\n            this.draw();\n            this.check();\n        },\n\n        renderCanvasControl: function () {\n            // prepare\n            this.ctx.font = 'bold 30px Monospaced';\n            this.setCtx(app.const.GAME_OVER_FILL);\n            this.ctx.fillRect(0, 0, app.const.WIDTH, app.const.HEIGHT);\n\n            var message = {}, desc = {};\n            if(this.gameOverState) {\n                message.text = \"GAME OVER!\";\n                desc.text = 'press space to restart';\n                // TODO: remove 120 on x coord\n                message.x = 120;\n                desc.x = 120;\n            } else if(this.readyToStart) {\n                message.text = \"START!\";\n                desc.text = 'press space to start';\n                message.x = 120;\n                desc.x = 120;\n            }\n\n            // message.x = (app.const.WIDTH-this.ctx.measureText(message.text).width)/2;\n            message.y = app.const.HEIGHT/2 - 15;\n            // desc.x = (app.const.WIDTH-this.ctx.measureText(message.text).width)/2;\n            desc.y = message.y + 30;\n\n            this.setCtx('#fff');\n            this.ctx.fillText(message.text, message.x, message.y);\n            this.ctx.font = '16px Monospaced';\n            this.ctx.fillText(desc.text, desc.x, desc.y);\n        },\n\n        // set func\n        keyDownController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            if(e.keyCode == 40 && this.speed < app.const.SPEED_MAX) {\n                this.speed += app.const.SPEED_STEP;\n                this.play();\n            }\n        },\n        keyUpController: function (e) {\n            if(e.keyCode == 32 && !this.statePlaying) {\n                if(this.gameOverState) {\n                    this.gameOverState = false;\n                    this.FC.reset();\n                    app.eventDispatcher.trigger('startNewGame');\n                }\n                this.startLoop();\n                return;\n            }\n            if(!this.statePlaying)\n                return;\n\n            var ctrl = e.ctrlKey;\n            if(ctrl) { // develop helpers\n                if(e.keyCode == 81) { // Q\n                    this.endLoop();\n                    if(!this.removeRow && this.statePlaying)\n                        this.startLoop();\n                }\n                if(e.keyCode == 88) { // X\n                    this.gameOver();\n                }\n            }\n            if(e.keyCode == 40) {\n                this.speed = app.const.SPEED_START;\n                this.play();\n            }\n\n            if(e.keyCode == 37) {\n                this.blockMoveDown = true;\n                this.moveFigure('left');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 39) {\n                this.blockMoveDown = true;\n                this.moveFigure('right');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 38) {\n                if(this.rotate()) {\n                    console.log('rotate');\n                }\n            }\n        },\n        gameOver: function () {\n            this.stop();\n\n            this.statePlaying = null;\n            this.removeRow = false;\n            this.gameOverState = true;\n\n            app.eventDispatcher.trigger('gameover');\n\n            this.renderCanvasControl();\n        },\n\n        // check func\n        // contain logic for collision\n        // right/left/bottom border\n        // check for gameover\n        checkLeft: function (collection) {\n            var cells = collection.where({left: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')-this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x') <= 0 || fillCell) {\n                    result = false;\n                    return true; // break _.each\n                }\n            }.bind(this));\n\n            return result;\n        },\n        checkRight: function (collection) {\n            var cells = collection.where({right: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')+this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x')+this.cellRect >= app.const.WIDTH || fillCell) {\n                    result = false;\n                    return true;\n                }\n            }.bind(this));\n\n            return result;\n        },\n        check: function () {\n            var cont = true; // continue?\n\n            // check for bottom border\n            this.CC.find(function (cell) {\n                if(cell.get('y')+this.cellRect == app.const.HEIGHT) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n                return;\n            }\n\n            // check for fill cells\n            this.CC.find(function (cell) {\n                var x = cell.get('x'), y = cell.get('y')+this.cellRect;\n\n                if(this.FC.findWhere({x: x, y: y})) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n            }\n        },\n        checkFillRow: function () {\n            var group = this.FC.groupBy('y');\n            var row = _.find(group, function (arr) {\n                return arr.length >= app.const.ROW_WIDTH;\n            });\n            if(row) {\n                // TODO: sort wrong\n                row = _.sortBy(row, 'x');\n                app.eventDispatcher.trigger('removeRow', app.const.REMOVE_ROW);\n                this.removeFillRow(row);\n            } else if(this.removeRow) {\n                this.removeRow = false;\n                app.eventDispatcher.trigger('removedFillRow');\n            }\n        },\n        rotate: function () {\n            if(this.CC.type == 'C') // cube is figure without rotate\n                return false;\n\n            var tmpCollection = new app.FigureCollection();\n            tmpCollection.add(this.CC.getNewArr());\n            if(this.checkLeft(tmpCollection) && this.checkRight(tmpCollection)) {\n                var no_valid_cell = tmpCollection.find(function (cell) {\n                    if(cell.get('y')+this.cellRect >= app.const.HEIGHT) {\n                        return cell;\n                    }\n                }.bind(this));\n\n                if(no_valid_cell)\n                    return;\n\n                this.CC.rotateSuccess();\n                tmpCollection.setCustom(this.CC.getCustom());\n                tmpCollection.setColor();\n                this.CC = tmpCollection;\n            }\n        },\n\n        // LOOP\n        startLoop: function () {\n            this.readyToStart = false;\n            if(this.removeRow || this.gameOverState)\n                return;\n            \n            if(this.nextFigureType === null) {\n                this.CC.createFigure(app.classes.helper.getRandomInt(0, 6));\n            } else {\n                this.CC.createFigure(this.nextFigureType);\n            }\n            \n            this.nextFigureType = app.classes.helper.getRandomInt(0, 6);\n            app.eventDispatcher.trigger('nextFigure', this.nextFigureType);\n            this.play();\n        },\n        endLoop: function () {\n            app.eventDispatcher.trigger('endLoop', app.const.END_LOOP);\n            if(this.CC.find(function (cell) { return cell.get('y') <= 0; })) {\n                this.gameOver();\n            }\n            this.CC.each(function (cell) {\n                this.FC.add(cell);\n            }.bind(this));\n            this.checkFillRow();\n        },\n        moveFigure: function (direct) {\n            if(direct == 'left') {\n                if(this.checkLeft(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')-this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false; // unblock move down\n            } else if(direct == 'right') {\n                if(this.checkRight(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')+this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false;\n            }\n            else if(!this.blockMoveDown) {\n                this.CC.each(function (cell) {\n                    cell.set('y', cell.get('y')+this.cellRect);\n                }.bind(this));\n            }\n        },\n        play: function () {\n            if(this.playId)\n                this.stop();\n            this.playId = setInterval(this.render.bind(this), 1000 / this.speed);\n            this.statePlaying = 'play';\n        },\n        stop: function () {\n            clearInterval(this.playId);\n        },\n\n        // Render func\n        draw: function () {\n            this.clear();\n            this.drawFigures();\n        },\n        drawFigures: function () {\n            this.CC.each(this.drawCell, this);\n            this.FC.each(this.drawCell, this);\n        },\n        removeFillRow: function (row) {\n            this.removeRow = true;\n            var y = row[0].get('y');\n            var interval = setInterval(function () {\n                this.clear();\n                if(!row.length) {\n                    clearInterval(interval);\n                    this.FC.each(function (cell) {\n                        if(cell.get('y')<y)\n                            cell.set('y', cell.get('y')+this.cellRect);\n                    }.bind(this));\n                    this.FC.each(this.drawCell, this);\n                    this.checkFillRow();\n                    return;\n                }\n\n                this.FC.remove(row[row.length-1]);\n                this.FC.each(this.drawCell, this);\n                row.pop();\n            }.bind(this), app.const.REMOVE_CELL_ANIMATION_TIME);\n            this.stop();\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.NextFigureView = app.Canvas.extend({\n        el: '#nextFigure',\n        initialize: function () {\n            this.el.height = app.const.CELL*6;\n            this.el.width = app.const.CELL*6;\n\n            app.Canvas.prototype.initialize.apply(this);\n\n            this.NF = new app.FigureCollection();\n\n            app.eventDispatcher.on('nextFigure', this.render, this);\n            app.eventDispatcher.on('gameover', this.gameOver, this);\n        },\n\n        render: function (type) {\n            this.NF.createFigure(type);\n            this.NF.moveToCenter();\n            this.clear();\n            this.NF.each(this.drawCell, this);\n        },\n        gameOver: function () {\n            this.clear();\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.PanelView = Backbone.View.extend({\n        el: '#panel',\n        points: 0,\n        events: {\n            'click #playerName span': 'showInputName',\n            'click #show_all_score': 'toggleScore',\n            'click #reset_score': 'resetScore',\n            'blur #playerName input': 'setName',\n            'keydown #playerName input': 'keyDownControl'\n        },\n        initialize: function () {\n            this.score = [];\n            this.allScore = false;\n            this.blocks = {\n                name: this.$el.find('#playerName span'),\n                input: this.$el.find('#playerName input'),\n                score: this.$el.find('#score'),\n                all_score: this.$el.find('#show_all_score'),\n                reset_score: this.$el.find('#reset_score')\n            };\n\n            if(!(this.playerName = localStorage.getItem('playerName')))\n                this.playerName = 'Player';\n\n            if(localStorage.getItem('playerScore')) {\n                this.score = JSON.parse(localStorage.getItem('playerScore'));\n                this.blocks.reset_score.removeClass('hidden');\n            }\n\n            this.render();\n            // TODO: concat this\n            app.eventDispatcher.on('endLoop', this.updatePoints, this);\n            app.eventDispatcher.on('removeRow', this.updatePoints, this);\n            app.eventDispatcher.on('gameover', this.gameOver, this);\n            app.eventDispatcher.on('startNewGame', this.resetPoints, this);\n        },\n        render: function () {\n            this.blocks.name.text(this.playerName);\n            this.renderScoreTable();\n        },\n        renderScoreTable: function () {\n            this.blocks.score.html('');\n\n            for(var i = this.score.length-1, j = 0; i>=0; i--, j++) {\n                if(j<app.const.SCORE_SIZE_ROW)\n                    this.blocks.score.append('<tr><td>'+this.score[i].name+'</td><td>'+this.score[i].points+'</td></tr>');\n                else\n                    this.blocks.score.append('<tr class=\"hidden no_top_score\"><td>'+this.score[i].name+'</td><td>'+this.score[i].points+'</td></tr>')\n            }\n\n            if(this.score.length>app.const.SCORE_SIZE_ROW)\n                this.blocks.all_score.removeClass('hidden');\n\n            if(this.score.length)\n                this.blocks.reset_score.removeClass('hidden');\n        },\n        toggleScore: function (e) {\n            e.preventDefault();\n            this.blocks.score.find('.no_top_score').toggleClass('hidden');\n            this.allScore = !this.allScore;\n            this.allScore ? this.blocks.all_score.text('hide all'):this.blocks.all_score.text('show all');\n        },\n        resetScore: function (e) {\n            e.preventDefault();\n            this.blocks.reset_score.addClass('hidden');\n            this.blocks.all_score.addClass('hidden');\n            localStorage.removeItem('playerScore');\n            this.score = [];\n            this.renderScoreTable();\n        },\n        resetPoints: function () {\n            this.points = 0;\n            this.updatePoints(0);\n        },\n        updatePoints: function (points) {\n            this.points += points;\n            this.$el.find('.points span').text(this.points);\n        },\n        gameOver: function () {\n            this.setScore({name: this.playerName, points: this.points});\n            this.renderScoreTable();\n        },\n        showInputName: function () {\n            this.blocks.name.hide();\n            this.blocks.input.val(this.playerName).show();\n            this.blocks.input[0].setSelectionRange(this.playerName.length, this.playerName.length);\n        },\n        keyDownControl: function (e) {\n            if(e.keyCode == 13) {\n                e.preventDefault();\n                this.setName();\n            }\n        },\n\n        setName: function () {\n            this.playerName = this.blocks.input[0].value;\n            this.blocks.name.text(this.playerName);\n            localStorage.setItem('playerName', this.playerName);\n            this.blocks.input.hide();\n            this.blocks.name.show();\n        },\n        setScore: function (item) {\n            if(this.score.length) {\n                var index = _.sortedIndex(this.score, item, 'points');\n\n                if(index == this.score.length)\n                    this.score.push(item);\n                else {\n                    var tmpScore = [];\n                    _.each(this.score, function (old_item, i) {\n                        if(index == i)\n                            tmpScore.push(item);\n                        tmpScore.push(old_item);\n                    });\n\n                    this.score = tmpScore;\n                }\n            } else\n                this.score.push(item);\n\n            // this.score.reverse();\n            localStorage.setItem('playerScore', JSON.stringify(this.score));\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    var Page = Backbone.View.extend({\n        el: '#page',\n\n        initialize: function () {\n            app.views = {};\n            app.models = {};\n            app.collections = {};\n            app.eventDispatcher = _.extend({}, Backbone.Events );\n\n            app.views.canvas = new app.CanvasView();\n            app.views.panel = new app.PanelView();\n            app.views.next_figure = new app.NextFigureView();\n\n            // this.startPlay();\n        }\n        // startPlay: function () {\n        //     app.eventDispatcher.trigger('startPlay');\n        // }\n    });\n\n    $(document).ready(function () {\n        app.page = new Page();\n    });\n})();"]}