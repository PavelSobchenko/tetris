{"version":3,"sources":["Constants.js","Helper.js","Cell.js","FigureCollection.js","Canvas.js","Page.js"],"names":["app","const","WIDTH","HEIGHT","CELL","SPEED_START","SPEED_MAX","SPEED_STEP","SIZE_FIGURE","STROKE_STYLE","FILL_STYLE","r","c","ROW_WIDTH","FIGURE","x","y","left","center","right","TYPE_MAP","TRANSFORM_MAP","I","L","RL","T","Z","RZ","POSITION_MAP","classes","helper","getRandomInt","min","max","Math","floor","random","CellModel","Backbone","Model","extend","defaults","FigureCollection","Collection","model","initialize","createFigure","intg","this","currentState","type","reset","rotateFigure","getNewArr","data","position","map","l","tmp","each","cell","i","item","_","isString","at","get","console","log","name","push","bind","rotateSuccess","getCustom","setCustom","config","CanvasView","View","el","style","border","height","width","ctx","getContext","setCtx","speed","cellRect","statePlaying","blockMoveDown","CC","FC","eventDispatcher","on","startLoop","$","window","keyUpController","keyDownController","render","moveFigure","draw","check","fillStyle","fill_style","strokeStyle","stroke_style","e","keyCode","play","ctrl","ctrlKey","endLoop","gameOver","checkRotate","stop","trigger","checkLeft","collection","cells","where","result","fillCell","findWhere","checkRight","cont","find","checkFillRow","group","groupBy","arr","length","tmpCollection","add","no_valid_cell","direct","set","playId","setInterval","clearInterval","clear","drawFigures","drawCell","strokeRect","fillRect","removeFillRow","removeModels","parseInt","clearRect","Page","views","models","collections","Events","canvas","startPlay","document","ready","page"],"mappings":"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","file":"main.min.js","sourcesContent":["var app = app || {};\n\n(function () {\n    app.const = {\n        // canvas\n        WIDTH: 216,\n        HEIGHT: 280,\n        CELL: 8,\n        SPEED_START: 5,\n        SPEED_MAX: 45,\n        SPEED_STEP: 10,\n        SIZE_FIGURE: 4,\n        STROKE_STYLE: '#3b6cba',\n        FILL_STYLE: '#1464e5'\n    };\n    var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n\n    // count cells in one row\n    app.const.ROW_WIDTH = app.const.WIDTH/r;\n\n    // figures\n    app.const.FIGURE = [\n        [\n            {x:(c-(r*2)), y:-r, left: true},\n            {x:(c-r), y:-r},\n            {x:c, y:-r, center: true},\n            {x:(c+r), y:-r, right: true}\n        ], // row\n        [\n            {x:(c-r), y:-(r*2), left: true},\n            {x:c, y:-(r*2), right: true},\n            {x:(c-r), y:-r, left: true},\n            {x:c, y:-r, right:true}\n        ], // rect\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, left: true},\n            {x:(c+r), y:-r, right: true}\n        ], // L\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, right: true},\n            {x:c-r, y:-r, left: true}\n        ], // RL\n        [\n            {x:c,y:0-r, right: true, left: true},\n            {x:(c-r),y:-(r*2) , left: true},\n            {x:c,y:0-(r*2), center: true},\n            {x:(c+r),y:-(r*2), right: true}\n        ], // T\n        [\n            {x:c-r, y: 0-(r*2), left: true},\n            {x:c, y: 0-(r*2), right: true, center: true},\n            {x:c, y: 0-r, left: true},\n            {x:c+r, y: 0-r, right: true}\n        ], // Z\n        [\n            {x: c+r, y: 0-(r*2), right: true},\n            {x: c, y: 0-(r*2), center: true, left: true},\n            {x: c, y: 0-r, right: true},\n            {x: c-r, y: 0-r, left: true}\n        ] // RZ\n    ];\n    app.const.TYPE_MAP = ['I', 'C', 'L', 'RL', 'T', 'Z', 'RZ'];\n    app.const.TRANSFORM_MAP = {\n        'I': [\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]],\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]]\n        ],\n        'L': [\n            [[1, 1], null, [-1, -1], [-2, 0]],\n            [[-1, 1], null, [1, -1], [0, -2]],\n            [[-1, -1], null, [1, 1], [2, 0]],\n            [[1, -1], null, [-1, 1], [0, 2]]\n        ],\n        'RL': [\n            [[1, 1], null, [-1, -1], [0, -2]],\n            [[-1, 1], null, [1, -1], [2, 0]],\n            [[-1, -1], null, [1, 1], [0, 2]],\n            [[1, -1], null, [-1, 1], [-2, 0]]\n        ],\n        'T': [\n            ['1', [1, -1], null, '0'],\n            ['1', [1, 1], null, '0'],\n            ['1', [-1, 1], null, '0'],\n            ['1', [-1, -1], null, '0']\n        ],\n        'Z': [\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]],\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]]\n        ],\n        'RZ': [\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]],\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]]\n        ]\n    };\n    app.const.POSITION_MAP = {\n        'I': [\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r'],\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r']\n        ],\n        'L': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'r', 'l'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'l', 'r']\n        ],\n        'RL': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r']\n        ],\n        'T': [\n            ['l', ['l', 'r'], ['c', 'r'], ['l', 'r']],\n            [['l', 'r'], 'r', 'c', 'l'],\n            ['r', ['l', 'r'], ['l', 'c'], ['l', 'r']],\n            [['l', 'r'], 'l', 'c', 'r']\n        ],\n        'Z': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r']\n        ],\n        'RZ': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l']\n        ]\n    };\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    \n    app.classes = app.classes || {}; \n    \n    app.classes.helper = {\n        getRandomInt: function (min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n    };\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.CellModel = Backbone.Model.extend({\n        defaults: {\n            x: 0,\n            y: 0,\n            left: false,\n            right: false,\n            center: false\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.FigureCollection = Backbone.Collection.extend({\n        model: app.CellModel,\n        initialize: function () {\n\n        },\n        createFigure: function (intg) {\n            var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n            this.currentState = 0;\n            this.type = app.const.TYPE_MAP[intg];\n            this.reset(app.const.FIGURE[intg]);\n        },\n        rotateFigure: function () {\n\n        },\n        getNewArr: function () {\n            if(this.currentState > 3)\n                this.currentState = 0;\n\n            var data = app.const.TRANSFORM_MAP[this.type][this.currentState];\n            var position = app.const.POSITION_MAP[this.type][this.currentState];\n            var map = {\n                'l': 'left',\n                'r': 'right',\n                'c': 'center'\n            };\n            var tmp = [];\n            var r = app.const.CELL;\n\n            this.each(function (cell, i) {\n                var item = {};\n\n                if(data[i]) {\n                    if(_.isString(data[i])) {\n                        item.x = this.at(data[i]).get('x');\n                        item.y = this.at(data[i]).get('y');\n                    } else {\n                        item.x = cell.get('x') + (data[i][0]*r);\n                        item.y = cell.get('y') + (data[i][1]*r);\n                    }\n                } else {\n                    item.x = cell.get('x');\n                    item.y = cell.get('y');\n                }\n\n                if(position[i]) {\n                    console.log(position[i]);\n                    if(_.isString(position[i])) {\n                        item[map[position[i]]] = true;\n                    } else {\n                        _.each(position[i], function (name) {\n                            item[map[name]] = true;\n                        });\n                    }\n                }\n                tmp.push(item);\n            }.bind(this));\n\n            return tmp;\n        },\n        rotateSuccess: function () {\n            ++this.currentState;\n        },\n        getCustom: function () {\n            return {\n                type: this.type,\n                currentState: this.currentState\n            }\n        },\n        setCustom: function (config) {\n            this.type = config.type;\n            this.currentState = config.currentState;\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.CanvasView = Backbone.View.extend({\n        el: '#cnvs',\n        initialize: function () {\n            this.el.style.border = '1px solid #333';\n            this.el.height = app.const.HEIGHT;\n            this.el.width = app.const.WIDTH;\n\n            this.ctx = this.el.getContext(\"2d\");\n            this.setCtx();\n\n            this.speed = app.const.SPEED_START;\n            this.cellRect = app.const.CELL;\n            this.statePlaying = null;\n            this.blockMoveDown = false;\n            this.CC = new app.FigureCollection(); // current figure\n            this.FC = new app.FigureCollection(); // array of filled cells\n\n            app.eventDispatcher.on('startPlay', this.startLoop, this);\n            $(window).on('keyup', this.keyUpController.bind(this));\n            $(window).on('keydown', this.keyDownController.bind(this));\n        },\n        render: function () {\n            if(!this.statePlaying)\n                return;\n\n            this.moveFigure();\n            this.draw();\n            this.check();\n        },\n\n        // set func\n        setCtx: function (config) {\n            if(config) {\n                this.ctx.fillStyle = config.fill_style || app.const.FILL_STYLE;\n                this.ctx.strokeStyle = config.stroke_style || app.const.STROKE_STYLE;\n            } else {\n                this.ctx.fillStyle = app.const.FILL_STYLE;\n                this.ctx.strokeStyle = app.const.STROKE_STYLE;\n            }\n        },\n        keyDownController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            if(e.keyCode == 40 && this.speed < app.const.SPEED_MAX) {\n                this.speed += app.const.SPEED_STEP;\n                this.play();\n            }\n        },\n        keyUpController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            var ctrl = e.ctrlKey;\n            if(ctrl) { // develop helpers\n                if(e.keyCode == 81) { // Q\n                    this.endLoop();\n                    this.startLoop();\n                }\n                if(e.keyCode == 88) { // X\n                    this.gameOver();\n                }\n            }\n            if(e.keyCode == 40) {\n                this.speed = app.const.SPEED_START;\n                this.play();\n            }\n\n            if(e.keyCode == 37) {\n                this.blockMoveDown = true;\n                this.moveFigure('left');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 39) {\n                this.blockMoveDown = true;\n                this.moveFigure('right');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 38) {\n                if(this.checkRotate()) {\n                    console.log('rotate');\n                }\n            }\n        },\n        gameOver: function () {\n            this.stop();\n            this.statePlaying = null;\n            app.eventDispatcher.trigger('gameover');\n            console.log('gameover');\n        },\n\n        // check func\n        // contain logic for collision\n        // right/left/bottom border\n        // check for gameover\n        checkLeft: function (collection) {\n            var cells = collection.where({left: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')-this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x') <= 0 || fillCell) {\n                    result = false;\n                    return true; // break _.each\n                }\n            }.bind(this));\n\n            return result;\n        },\n        checkRight: function (collection) {\n            var cells = collection.where({right: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')+this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x')+this.cellRect >= app.const.WIDTH || fillCell) {\n                    result = false;\n                    return true;\n                }\n            }.bind(this));\n\n            return result;\n        },\n        check: function () {\n            var cont = true; // continue?\n\n            // check for bottom border\n            this.CC.find(function (cell) {\n                if(cell.get('y')+this.cellRect == app.const.HEIGHT) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n                return;\n            }\n\n            // check for fill cells\n            this.CC.find(function (cell) {\n                var x = cell.get('x'), y = cell.get('y')+this.cellRect;\n\n                if(this.FC.findWhere({x: x, y: y})) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                // check for gameover\n                if(this.CC.findWhere({y: 0})) {\n                    this.gameOver();\n                } else {\n                    this.startLoop();\n                }\n            }\n        },\n        checkFillRow: function () {\n            var group = this.FC.groupBy('y');\n            _.each(group, function (arr, y) {\n                if(arr.length === app.const.ROW_WIDTH) {\n                    // this.removeFillRow(y);\n                    // this.checkFillRow();\n                }\n            }.bind(this));\n        },\n        checkRotate: function () {\n            if(this.CC.type == 'C') // cube is figure without rotate\n                return false;\n\n            var tmpCollection = new app.FigureCollection();\n            tmpCollection.add(this.CC.getNewArr());\n            if(this.checkLeft(tmpCollection) && this.checkRight(tmpCollection)) {\n                var no_valid_cell = tmpCollection.find(function (cell) {\n                    if(cell.get('y')+this.cellRect >= app.const.HEIGHT) {\n                        return cell;\n                    }\n                }.bind(this));\n\n                if(no_valid_cell)\n                    return;\n\n                this.CC.rotateSuccess();\n                tmpCollection.setCustom(this.CC.getCustom());\n                this.CC = tmpCollection;\n            }\n        },\n\n        // LOOP\n        startLoop: function () {\n            // var rand = app.classes.helper.getRandomInt(0, 4);\n            this.CC.createFigure(3);\n            this.play();\n        },\n        endLoop: function () {\n            this.CC.each(function (cell) {\n                this.FC.add(cell);\n            }.bind(this));\n            this.checkFillRow();\n        },\n        moveFigure: function (direct) {\n            if(direct == 'left') {\n                if(this.checkLeft(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')-this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false; // unblock move down\n            } else if(direct == 'right') {\n                if(this.checkRight(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')+this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false;\n            }\n            else if(!this.blockMoveDown) {\n                this.CC.each(function (cell) {\n                    cell.set('y', cell.get('y')+this.cellRect);\n                }.bind(this));\n            }\n        },\n        play: function () {\n            if(this.playId)\n                this.stop();\n            this.playId = setInterval(this.render.bind(this), 1000 / this.speed);\n            this.statePlaying = 'play'\n        },\n        stop: function () {\n            clearInterval(this.playId);\n        },\n\n        // Render func\n        draw: function () {\n            this.clear();\n            this.drawFigures();\n        },\n        drawFigures: function () {\n            this.CC.each(this.drawCell, this);\n            this.FC.each(this.drawCell, this);\n        },\n        drawCell: function (cell) {\n            var x = cell.get('x'),\n                y = cell.get('y');\n\n            this.ctx.strokeRect(x, y, this.cellRect-0.5, this.cellRect-0.5);\n            this.ctx.fillRect(x, y, this.cellRect-2, this.cellRect-2);\n        },\n        removeFillRow: function (y) {\n            var removeModels = this.FC.where({y: parseInt(y)});\n            console.log(removeModels);\n        },\n        clear: function () {\n            this.ctx.clearRect(0,0, app.const.WIDTH, app.const.HEIGHT);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    var Page = Backbone.View.extend({\n        el: '#page',\n\n        initialize: function () {\n            app.views = {};\n            app.models = {};\n            app.collections = {};\n            app.eventDispatcher = _.extend({}, Backbone.Events );\n\n            app.views.canvas = new app.CanvasView();\n\n            this.startPlay();\n        },\n        startPlay: function () {\n            app.eventDispatcher.trigger('startPlay');\n        }\n    });\n\n    $(document).ready(function () {\n        app.page = new Page();\n    });\n})();"]}