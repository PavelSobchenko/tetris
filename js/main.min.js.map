{"version":3,"sources":["Constants.js","Helper.js","Cell.js","FigureCollection.js","CanvasGlobal.js","Canvas.js","NextFigure.js","Panel.js","Page.js"],"names":["app","const","WIDTH","HEIGHT","CELL","SPEED_START","SPEED_MAX","SPEED_STEP","SIZE_FIGURE","STROKE_STYLE","FILL_STYLE","REMOVE_CELL_ANIMATION_TIME","END_LOOP","REMOVE_ROW","FIGURE_COLORS","I","C","L","RL","T","Z","RZ","r","c","r2","r3","r4","sr","ROW_WIDTH","FIGURE","x","y","left","center","right","TYPE_MAP","TRANSFORM_MAP","POSITION_MAP","NEXT_FIGURE_POSITION","classes","helper","getRandomInt","min","max","Math","floor","random","CellModel","Backbone","Model","extend","defaults","stroke","fill","FigureCollection","Collection","model","initialize","createFigure","intg","this","currentState","type","reset","setColor","moveToCenter","coords","each","cell","i","set","bind","getNewArr","data","position","map","l","tmp","item","_","isString","at","get","name","push","rotateSuccess","getCustom","setCustom","config","Canvas","View","ctx","el","getContext","cellRect","setCtx","fillStyle","strokeStyle","drawCell","strokeRect","fillRect","clear","clearRect","CanvasView","height","width","prototype","apply","speed","statePlaying","blockMoveDown","removeRow","nextFigureType","CC","FC","eventDispatcher","on","startLoop","$","window","keyUpController","keyDownController","render","moveFigure","draw","check","e","keyCode","play","ctrl","ctrlKey","endLoop","gameOver","rotate","console","log","stop","gameOverState","trigger","checkLeft","collection","cells","where","result","fillCell","findWhere","checkRight","cont","find","checkFillRow","group","groupBy","row","arr","length","sortBy","removeFillRow","tmpCollection","add","no_valid_cell","direct","playId","setInterval","clearInterval","drawFigures","interval","remove","pop","NextFigureView","NF","PanelView","points","updatePoints","$el","text","Page","views","models","collections","Events","canvas","panel","next_figure","startPlay","document","ready","page"],"mappings":"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","file":"main.min.js","sourcesContent":["var app = app || {};\n\n(function () {\n    app.const = {\n        // canvas\n        WIDTH: 240,\n        HEIGHT: 304,\n        CELL: 16,\n        SPEED_START: 5,\n        SPEED_MAX: 45,\n        SPEED_STEP: 10,\n        SIZE_FIGURE: 4,\n        STROKE_STYLE: '#000',\n        FILL_STYLE: '#333',\n        REMOVE_CELL_ANIMATION_TIME: 50, // ms\n        \n        // points\n        END_LOOP: 10,\n        REMOVE_ROW: 100,\n\n        // figure colors\n        FIGURE_COLORS: {\n            I: ['#1464e5', '#3b6cba'], // fill\\stroke\n            C: ['#fc2d2d', '#bf1616'],\n            L: ['#f9921b', '#e87f06'],\n            RL: ['#e9fc1b', '#d5e80d'],\n            T: ['#6aed1e', '#5bd813'],\n            Z: ['#3afca8', '#20d888'],\n            RZ: ['#853ff4', '#6015d8']\n        }\n    };\n    var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2),\n        r2 = r*2, r3 = r*3, r4 = r*4, sr = r/2;\n\n    // count cells in one row\n    app.const.ROW_WIDTH = app.const.WIDTH/r;\n\n    // figures\n    app.const.FIGURE = [\n        [\n            {x:(c-(r*2)), y:-r, left: true},\n            {x:(c-r), y:-r},\n            {x:c, y:-r, center: true},\n            {x:(c+r), y:-r, right: true}\n        ], // row\n        [\n            {x:(c-r), y:-(r*2), left: true},\n            {x:c, y:-(r*2), right: true},\n            {x:(c-r), y:-r, left: true},\n            {x:c, y:-r, right:true}\n        ], // rect\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, left: true},\n            {x:(c+r), y:-r, right: true}\n        ], // L\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, right: true},\n            {x:c-r, y:-r, left: true}\n        ], // RL\n        [\n            {x:c,y:0-r, right: true, left: true},\n            {x:(c-r),y:-(r*2) , left: true},\n            {x:c,y:0-(r*2), center: true},\n            {x:(c+r),y:-(r*2), right: true}\n        ], // T\n        [\n            {x:c-r, y: 0-(r*2), left: true},\n            {x:c, y: 0-(r*2), right: true, center: true},\n            {x:c, y: 0-r, left: true},\n            {x:c+r, y: 0-r, right: true}\n        ], // Z\n        [\n            {x: c+r, y: 0-(r*2), right: true},\n            {x: c, y: 0-(r*2), center: true, left: true},\n            {x: c, y: 0-r, right: true},\n            {x: c-r, y: 0-r, left: true}\n        ] // RZ\n    ];\n    app.const.TYPE_MAP = ['I', 'C', 'L', 'RL', 'T', 'Z', 'RZ'];\n    app.const.TRANSFORM_MAP = {\n        'I': [\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]],\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]]\n        ],\n        'L': [\n            [[1, 1], null, [-1, -1], [-2, 0]],\n            [[-1, 1], null, [1, -1], [0, -2]],\n            [[-1, -1], null, [1, 1], [2, 0]],\n            [[1, -1], null, [-1, 1], [0, 2]]\n        ],\n        'RL': [\n            [[1, 1], null, [-1, -1], [0, -2]],\n            [[-1, 1], null, [1, -1], [2, 0]],\n            [[-1, -1], null, [1, 1], [0, 2]],\n            [[1, -1], null, [-1, 1], [-2, 0]]\n        ],\n        'T': [\n            ['1', [1, -1], null, '0'],\n            ['1', [1, 1], null, '0'],\n            ['1', [-1, 1], null, '0'],\n            ['1', [-1, -1], null, '0']\n        ],\n        'Z': [\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]],\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]]\n        ],\n        'RZ': [\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]],\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]]\n        ]\n    };\n    app.const.POSITION_MAP = {\n        'I': [\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r'],\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r']\n        ],\n        'L': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'r', 'l'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'l', 'r']\n        ],\n        'RL': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r']\n        ],\n        'T': [\n            ['l', ['l', 'r'], ['c', 'r'], ['l', 'r']],\n            [['l', 'r'], 'r', 'c', 'l'],\n            ['r', ['l', 'r'], ['l', 'c'], ['l', 'r']],\n            [['l', 'r'], 'l', 'c', 'r']\n        ],\n        'Z': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r']\n        ],\n        'RZ': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l']\n        ]\n    };\n\n    app.const.NEXT_FIGURE_POSITION = {\n        'I': [[r, r2+sr], [r2, r2+sr], [r3, r2+sr], [r4, r2+sr]],\n        'C': [[r2, r2], [r3, r2], [r2, r3], [r3, r3]],\n        'L': [[r2, r], [r2, r2], [r2, r3], [r3, r3]],\n        'RL': [[r3, r], [r3, r2], [r3, r3], [r2, r3]],\n        'T': [[r2+sr, r3], [r+sr, r2], [r2+sr, r2], [r3+sr, r2]],\n        'Z': [[r+sr, r2], [r2+sr, r2], [r2+sr, r3], [r3+sr, r3]],\n        'RZ': [[r3+sr, r2], [r2+sr, r2], [r2+sr, r3], [r+sr, r3]]\n    }\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    \n    app.classes = app.classes || {}; \n    \n    app.classes.helper = {\n        getRandomInt: function (min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n    };\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.CellModel = Backbone.Model.extend({\n        defaults: {\n            x: 0,\n            y: 0,\n            left: false,\n            right: false,\n            center: false,\n            stroke: '',\n            fill: ''\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.FigureCollection = Backbone.Collection.extend({\n        model: app.CellModel,\n        initialize: function () {\n\n        },\n        createFigure: function (intg) {\n            var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n            this.currentState = 0;\n            this.type = app.const.TYPE_MAP[intg];\n            this.reset(app.const.FIGURE[intg]);\n            this.setColor();\n        },\n        moveToCenter: function () {\n            var coords = app.const.NEXT_FIGURE_POSITION[this.type];\n            this.each(function (cell, i) {\n                cell.set({\n                    'x': coords[i][0],\n                    'y': coords[i][1]\n                });\n            });\n        },\n        setColor: function () {\n            this.each(function (cell) {\n                cell.set({\n                    'fill': app.const.FIGURE_COLORS[this.type][0],\n                    'stroke': app.const.FIGURE_COLORS[this.type][1]\n                });\n            }.bind(this));\n        },\n        getNewArr: function () {\n            if(this.currentState > 3)\n                this.currentState = 0;\n\n            var data = app.const.TRANSFORM_MAP[this.type][this.currentState];\n            var position = app.const.POSITION_MAP[this.type][this.currentState];\n            var map = {\n                'l': 'left',\n                'r': 'right',\n                'c': 'center'\n            };\n            var tmp = [];\n            var r = app.const.CELL;\n\n            this.each(function (cell, i) {\n                var item = {};\n\n                if(data[i]) {\n                    if(_.isString(data[i])) {\n                        item.x = this.at(data[i]).get('x');\n                        item.y = this.at(data[i]).get('y');\n                    } else {\n                        item.x = cell.get('x') + (data[i][0]*r);\n                        item.y = cell.get('y') + (data[i][1]*r);\n                    }\n                } else {\n                    item.x = cell.get('x');\n                    item.y = cell.get('y');\n                }\n\n                if(position[i]) {\n                    if(_.isString(position[i])) {\n                        item[map[position[i]]] = true;\n                    } else {\n                        _.each(position[i], function (name) {\n                            item[map[name]] = true;\n                        });\n                    }\n                }\n                tmp.push(item);\n            }.bind(this));\n\n            return tmp;\n        },\n        rotateSuccess: function () {\n            ++this.currentState;\n        },\n        getCustom: function () {\n            return {\n                type: this.type,\n                currentState: this.currentState\n            }\n        },\n        setCustom: function (config) {\n            this.type = config.type;\n            this.currentState = config.currentState;\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    app.Canvas = Backbone.View.extend({\n\n        initialize: function () {\n            this.ctx = this.el.getContext(\"2d\");\n            this.cellRect = app.const.CELL;\n        },\n\n        setCtx: function (cell) {\n            if(cell) {\n                this.ctx.fillStyle = cell.get('fill') || app.const.FILL_STYLE;\n                this.ctx.strokeStyle = cell.get('stroke') || app.const.STROKE_STYLE;\n            } else {\n                this.ctx.fillStyle = app.const.FILL_STYLE;\n                this.ctx.strokeStyle = app.const.STROKE_STYLE;\n            }\n        },\n\n        drawCell: function (cell) {\n            var x = cell.get('x'),\n                y = cell.get('y');\n            this.setCtx(cell);\n            this.ctx.strokeRect(x, y, this.cellRect-0.5, this.cellRect-0.5);\n            this.ctx.fillRect(x, y, this.cellRect-2, this.cellRect-2);\n        },\n\n        clear: function () {\n            this.ctx.clearRect(0,0, app.const.WIDTH, app.const.HEIGHT);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.CanvasView = app.Canvas.extend({\n        el: '#cnvs',\n        initialize: function () {\n            this.el.height = app.const.HEIGHT;\n            this.el.width = app.const.WIDTH;\n            \n            app.Canvas.prototype.initialize.apply(this);\n            this.setCtx();\n\n            this.speed = app.const.SPEED_START;\n            this.statePlaying = null;\n            this.blockMoveDown = false;\n            this.removeRow = false;\n            this.nextFigureType = null;\n            this.CC = new app.FigureCollection(); // current figure\n            this.FC = new app.FigureCollection(); // array of filled cells\n\n            app.eventDispatcher.on('startPlay removedFillRow', this.startLoop, this);\n            $(window).on('keyup', this.keyUpController.bind(this));\n            $(window).on('keydown', this.keyDownController.bind(this));\n        },\n        render: function () {\n            if(!this.statePlaying || this.removeRow)\n                return;\n\n            this.moveFigure();\n            this.draw();\n            this.check();\n        },\n\n        // set func\n        keyDownController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            if(e.keyCode == 40 && this.speed < app.const.SPEED_MAX) {\n                this.speed += app.const.SPEED_STEP;\n                this.play();\n            }\n        },\n        keyUpController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            var ctrl = e.ctrlKey;\n            if(ctrl) { // develop helpers\n                if(e.keyCode == 81) { // Q\n                    this.endLoop();\n                    if(!this.removeRow && this.statePlaying)\n                        this.startLoop();\n                }\n                if(e.keyCode == 88) { // X\n                    this.gameOver();\n                }\n            }\n            if(e.keyCode == 40) {\n                this.speed = app.const.SPEED_START;\n                this.play();\n            }\n\n            if(e.keyCode == 37) {\n                this.blockMoveDown = true;\n                this.moveFigure('left');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 39) {\n                this.blockMoveDown = true;\n                this.moveFigure('right');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 38) {\n                if(this.rotate()) {\n                    console.log('rotate');\n                }\n            }\n        },\n        gameOver: function () {\n            this.stop();\n            this.statePlaying = null;\n            this.removeRow = false;\n            this.gameOverState = true;\n            app.eventDispatcher.trigger('gameover');\n            console.log('gameover');\n        },\n\n        // check func\n        // contain logic for collision\n        // right/left/bottom border\n        // check for gameover\n        checkLeft: function (collection) {\n            var cells = collection.where({left: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')-this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x') <= 0 || fillCell) {\n                    result = false;\n                    return true; // break _.each\n                }\n            }.bind(this));\n\n            return result;\n        },\n        checkRight: function (collection) {\n            var cells = collection.where({right: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')+this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x')+this.cellRect >= app.const.WIDTH || fillCell) {\n                    result = false;\n                    return true;\n                }\n            }.bind(this));\n\n            return result;\n        },\n        check: function () {\n            var cont = true; // continue?\n\n            // check for bottom border\n            this.CC.find(function (cell) {\n                if(cell.get('y')+this.cellRect == app.const.HEIGHT) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n                return;\n            }\n\n            // check for fill cells\n            this.CC.find(function (cell) {\n                var x = cell.get('x'), y = cell.get('y')+this.cellRect;\n\n                if(this.FC.findWhere({x: x, y: y})) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n            }\n        },\n        checkFillRow: function () {\n            var group = this.FC.groupBy('y');\n            var row = _.find(group, function (arr) {\n                return arr.length >= app.const.ROW_WIDTH;\n            });\n            if(row) {\n                // TODO: sort wrong\n                row = _.sortBy(row, 'x');\n                app.eventDispatcher.trigger('removeRow', app.const.REMOVE_ROW);\n                this.removeFillRow(row);\n            } else if(this.removeRow) {\n                this.removeRow = false;\n                app.eventDispatcher.trigger('removedFillRow');\n            }\n        },\n        rotate: function () {\n            if(this.CC.type == 'C') // cube is figure without rotate\n                return false;\n\n            var tmpCollection = new app.FigureCollection();\n            tmpCollection.add(this.CC.getNewArr());\n            if(this.checkLeft(tmpCollection) && this.checkRight(tmpCollection)) {\n                var no_valid_cell = tmpCollection.find(function (cell) {\n                    if(cell.get('y')+this.cellRect >= app.const.HEIGHT) {\n                        return cell;\n                    }\n                }.bind(this));\n\n                if(no_valid_cell)\n                    return;\n\n                this.CC.rotateSuccess();\n                tmpCollection.setCustom(this.CC.getCustom());\n                tmpCollection.setColor();\n                this.CC = tmpCollection;\n            }\n        },\n\n        // LOOP\n        startLoop: function () {\n            if(this.removeRow || this.gameOverState)\n                return;\n            \n            if(this.nextFigureType === null) {\n                this.CC.createFigure(app.classes.helper.getRandomInt(0, 6));\n            } else {\n                this.CC.createFigure(this.nextFigureType);\n            }\n            \n            this.nextFigureType = app.classes.helper.getRandomInt(0, 6);\n            app.eventDispatcher.trigger('nextFigure', this.nextFigureType);\n            this.play();\n        },\n        endLoop: function () {\n            app.eventDispatcher.trigger('endLoop', app.const.END_LOOP);\n            if(this.CC.find(function (cell) { return cell.get('y') <= 0; })) {\n                this.gameOver();\n            }\n            this.CC.each(function (cell) {\n                this.FC.add(cell);\n            }.bind(this));\n            this.checkFillRow();\n        },\n        moveFigure: function (direct) {\n            if(direct == 'left') {\n                if(this.checkLeft(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')-this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false; // unblock move down\n            } else if(direct == 'right') {\n                if(this.checkRight(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')+this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false;\n            }\n            else if(!this.blockMoveDown) {\n                this.CC.each(function (cell) {\n                    cell.set('y', cell.get('y')+this.cellRect);\n                }.bind(this));\n            }\n        },\n        play: function () {\n            if(this.playId)\n                this.stop();\n            this.playId = setInterval(this.render.bind(this), 1000 / this.speed);\n            this.statePlaying = 'play';\n        },\n        stop: function () {\n            clearInterval(this.playId);\n        },\n\n        // Render func\n        draw: function () {\n            this.clear();\n            this.drawFigures();\n        },\n        drawFigures: function () {\n            this.CC.each(this.drawCell, this);\n            this.FC.each(this.drawCell, this);\n        },\n        removeFillRow: function (row) {\n            this.removeRow = true;\n            var y = row[0].get('y');\n            var interval = setInterval(function () {\n                this.clear();\n                if(!row.length) {\n                    clearInterval(interval);\n                    this.FC.each(function (cell) {\n                        if(cell.get('y')<y)\n                            cell.set('y', cell.get('y')+this.cellRect);\n                    }.bind(this));\n                    this.FC.each(this.drawCell, this);\n                    this.checkFillRow();\n                    return;\n                }\n\n                this.FC.remove(row[row.length-1]);\n                this.FC.each(this.drawCell, this);\n                row.pop();\n            }.bind(this), app.const.REMOVE_CELL_ANIMATION_TIME);\n            this.stop();\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.NextFigureView = app.Canvas.extend({\n        el: '#nextFigure',\n        initialize: function () {\n            this.el.height = app.const.CELL*6;\n            this.el.width = app.const.CELL*6;\n\n            app.Canvas.prototype.initialize.apply(this);\n\n            this.NF = new app.FigureCollection();\n\n            app.eventDispatcher.on('nextFigure', this.render, this);\n        },\n\n        render: function (type) {\n            this.NF.createFigure(type);\n            this.NF.moveToCenter();\n            this.clear();\n            this.NF.each(this.drawCell, this);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.PanelView = Backbone.View.extend({\n        el: '#panel',\n        points: 0,\n        initialize: function () {\n            // TODO: concat this\n            app.eventDispatcher.on('endLoop', this.updatePoints, this);\n            app.eventDispatcher.on('removeRow', this.updatePoints, this);\n        },\n        updatePoints: function (points) {\n            this.points += points;\n            this.$el.find('.points span').text(this.points);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    var Page = Backbone.View.extend({\n        el: '#page',\n\n        initialize: function () {\n            app.views = {};\n            app.models = {};\n            app.collections = {};\n            app.eventDispatcher = _.extend({}, Backbone.Events );\n\n            app.views.canvas = new app.CanvasView();\n            app.views.panel = new app.PanelView();\n            app.views.next_figure = new app.NextFigureView();\n\n            this.startPlay();\n        },\n        startPlay: function () {\n            app.eventDispatcher.trigger('startPlay');\n        }\n    });\n\n    $(document).ready(function () {\n        app.page = new Page();\n    });\n})();"]}