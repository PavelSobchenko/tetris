{"version":3,"sources":["Constants.js","Helper.js","Cell.js","FigureCollection.js","Canvas.js","Page.js"],"names":["app","const","WIDTH","HEIGHT","CELL","SPEED_START","SPEED_MAX","SPEED_STEP","SIZE_FIGURE","STROKE_STYLE","FILL_STYLE","ROW_WIDTH","classes","helper","getRandomInt","min","max","Math","floor","random","CellModel","Backbone","Model","extend","defaults","x","y","left","right","center","FigureCollection","Collection","model","initialize","createFigure","intg","r","c","this","currentState","figure","type_map","type","reset","rotateFigure","getNewArr","transform_map","I","L","RL","T","Z","RZ","position_map","data","position","tmp","each","cell","i","item","_","isString","at","get","name","push","bind","rotateSuccess","getCustom","setCustom","config","CanvasView","View","el","style","border","height","width","ctx","getContext","setCtx","speed","cellRect","statePlaying","blockMoveDown","CC","FC","eventDispatcher","on","startLoop","$","window","keyUpController","keyDownController","render","moveFigure","draw","check","fillStyle","fill_style","strokeStyle","stroke_style","e","keyCode","play","ctrl","ctrlKey","endLoop","gameOver","checkRotate","console","log","stop","trigger","checkLeft","collection","cells","where","result","fillCell","findWhere","checkRight","cont","find","checkFillRow","group","groupBy","arr","length","tmpCollection","add","no_valid_cell","direct","set","playId","setInterval","clearInterval","clear","drawFigures","drawCell","strokeRect","fillRect","removeFillRow","removeModels","parseInt","clearRect","Page","views","models","collections","Events","canvas","startPlay","document","ready","page"],"mappings":"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","file":"main.min.js","sourcesContent":["var app = app || {};\n\n(function () {\n    app.const = {\n        // canvas\n        WIDTH: 216,\n        HEIGHT: 280,\n        CELL: 8,\n        SPEED_START: 5,\n        SPEED_MAX: 45,\n        SPEED_STEP: 10,\n        SIZE_FIGURE: 4,\n        STROKE_STYLE: '#3b6cba',\n        FILL_STYLE: '#1464e5'\n    };\n\n    app.const.ROW_WIDTH = app.const.WIDTH/app.const.CELL;\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    \n    app.classes = app.classes || {}; \n    \n    app.classes.helper = {\n        getRandomInt: function (min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n    };\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.CellModel = Backbone.Model.extend({\n        defaults: {\n            x: 0,\n            y: 0,\n            left: false,\n            right: false,\n            center: false\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.FigureCollection = Backbone.Collection.extend({\n        model: app.CellModel,\n        initialize: function () {\n\n        },\n        createFigure: function (intg) {\n            var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n            this.currentState = 0;\n            var figure = [\n                [\n                    {x:(c-(r*2)), y:-r, left: true},\n                    {x:(c-r), y:-r},\n                    {x:c, y:-r, center: true},\n                    {x:(c+r), y:-r, right: true}\n                ], // row\n                [\n                    {x:(c-r), y:-(r*2), left: true},\n                    {x:c, y:-(r*2), right: true},\n                    {x:(c-r), y:-r, left: true},\n                    {x:c, y:-r, right:true}\n                ], // rect\n                [\n                    {x:c, y:-(r*3), left: true, right: true},\n                    {x:c, y:-(r*2), left: true, right: true, center: true},\n                    {x:c, y:-r, left: true},\n                    {x:(c+r), y:-r, right: true}\n                ], // L\n                [\n                    {x:c, y:-(r*3), left: true, right: true},\n                    {x:c, y:-(r*2), left: true, right: true, center: true},\n                    {x:c, y:-r, right: true},\n                    {x:c-r, y:-r, left: true}\n                ], // RL\n                [\n                    {x:c,y:0-r, right: true, left: true},\n                    {x:(c-r),y:-(r*2) , left: true},\n                    {x:c,y:0-(r*2), center: true},\n                    {x:(c+r),y:-(r*2), right: true}\n                ], // T\n                [\n                    {x:c-r, y: 0-(r*2), left: true},\n                    {x:c, y: 0-(r*2), right: true, center: true},\n                    {x:c, y: 0-r, left: true},\n                    {x:c+r, y: 0-r, right: true}\n                ], // Z\n                [\n                    {x: c+r, y: 0-(r*2), right: true},\n                    {x: c, y: 0-(r*2), center: true, left: true},\n                    {x: c, y: 0-r, right: true},\n                    {x: c-r, y: 0-r, left: true}\n                ] // RZ\n            ];\n            var type_map = ['I', 'C', 'L', 'RL', 'T', 'Z', 'RZ'];\n\n            this.type = type_map[intg];\n            this.reset(figure[intg]);\n        },\n        rotateFigure: function () {\n\n        },\n        getNewArr: function () {\n            if(this.currentState > 3)\n                this.currentState = 0;\n\n            var transform_map = {\n                'I': [\n                    [[2, -2], [1, -1], null, [-1, 1]],\n                    [[-2, 2], [-1, 1], null, [1, -1]],\n                    [[2, -2], [1, -1], null, [-1, 1]],\n                    [[-2, 2], [-1, 1], null, [1, -1]]\n                ],\n                'L': [\n                    [[1, 1], null, [-1, -1], [-2, 0]],\n                    [[-1, 1], null, [1, -1], [0, -2]],\n                    [[-1, -1], null, [1, 1], [2, 0]],\n                    [[1, -1], null, [-1, 1], [0, 2]]\n                ],\n                'RL': [\n                    [[1, 1], null, [-1, -1], [0, -2]],\n                    [[-1, 1], null, [1, -1], [2, 0]],\n                    [[-1, -1], null, [1, 1], [0, 2]],\n                    [[1, -1], null, [-1, 1], [-2, 0]]\n                ],\n                'T': [\n                    ['1', [1, -1], null, '0'],\n                    ['1', [1, 1], null, '0'],\n                    ['1', [-1, 1], null, '0'],\n                    ['1', [-1, -1], null, '0']\n                ],\n                'Z': [\n                    [[1, -1], null, '0', [-2, 0]],\n                    [[-1, 1], null, [1, 1], [2, 0]],\n                    [[1, -1], null, '0', [-2, 0]],\n                    [[-1, 1], null, [1, 1], [2, 0]]\n                ],\n                'RZ': [\n                    ['2', null, [-1, -1], [0, -2]],\n                    [[1, -1], null, '0', [0, 2]],\n                    ['2', null, [-1, -1], [0, -2]],\n                    [[1, -1], null, '0', [0, 2]]\n                ]\n            };\n\n            var position_map = {\n                'I': [\n                    [['left', 'right'], ['left', 'right'], ['left', 'right', 'center'], ['left', 'right']],\n                    [['left'], null, ['center'], ['right']],\n                    [['left', 'right'], ['left', 'right'], ['left', 'right', 'center'], ['left', 'right']],\n                    [['left'], null, ['center'], ['right']]\n                ],\n                'L': [\n                    [['right'], ['center'], ['left'], ['left', 'right']],\n                    [['left', 'right'], ['left', 'right', 'center'], ['right'], ['left']],\n                    [['left'], ['center'], ['right'], ['left', 'right']],\n                    [['left', 'right'], ['left', 'right', 'center'], ['left'], ['right']]\n                ],\n                'RL': [\n                    [['right'], ['center'], ['left'], ['left', 'right']],\n                    [['left', 'right'], ['center', 'left', 'right'], ['left'], ['right']],\n                    [['left'], ['center'], ['right'], ['left', 'right']],\n                    [['left', 'right'], ['center', 'left', 'right'], ['right'], ['left']]\n                ],\n                'T': [\n                    [['left'], ['left', 'right'], ['center', 'right'], ['left', 'right']],\n                    [['left', 'right'], ['right'], ['center'], ['left']],\n                    [['right'], ['left', 'right'], ['left', 'center'], ['left', 'right']],\n                    [['left', 'right'], ['left'], ['center'], ['right']]\n                ],\n                'Z': [\n                    [['left', 'right'], ['center', 'right'], ['left'], ['left', 'right']],\n                    [['left'], ['center', 'right'], ['left'], ['right']],\n                    [['left', 'right'], ['center', 'right'], ['left'], ['left', 'right']],\n                    [['left'], ['center', 'right'], ['left'], ['right']]\n                ],\n                'RZ': [\n                    [['left', 'right'], ['center', 'right'], ['left'], ['left', 'right']],\n                    [['right'], ['center', 'left'], ['right'], ['left']],\n                    [['left', 'right'], ['center', 'right'], ['left'], ['left', 'right']],\n                    [['right'], ['center', 'left'], ['right'], ['left']]\n                ]\n            };\n\n            var data = transform_map[this.type][this.currentState];\n            var position = position_map[this.type][this.currentState];\n            var tmp = [];\n            var r = app.const.CELL;\n\n            this.each(function (cell, i) {\n                var item = {};\n\n                if(data[i]) {\n                    if(_.isString(data[i])) {\n                        item.x = this.at(data[i]).get('x');\n                        item.y = this.at(data[i]).get('y');\n                    } else {\n                        item.x = cell.get('x') + (data[i][0]*r);\n                        item.y = cell.get('y') + (data[i][1]*r);\n                    }\n                } else {\n                    item.x = cell.get('x');\n                    item.y = cell.get('y');\n                }\n\n                if(position[i]) {\n                    _.each(position[i], function (name) {\n                       item[name] = true;\n                    });\n                }\n                tmp.push(item);\n            }.bind(this));\n\n            return tmp;\n        },\n        rotateSuccess: function () {\n            ++this.currentState;\n        },\n        getCustom: function () {\n            return {\n                type: this.type,\n                currentState: this.currentState\n            }\n        },\n        setCustom: function (config) {\n            this.type = config.type;\n            this.currentState = config.currentState;\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.CanvasView = Backbone.View.extend({\n        el: '#cnvs',\n        initialize: function () {\n            this.el.style.border = '1px solid #333';\n            this.el.height = app.const.HEIGHT;\n            this.el.width = app.const.WIDTH;\n\n            this.ctx = this.el.getContext(\"2d\");\n            this.setCtx();\n\n            this.speed = app.const.SPEED_START;\n            this.cellRect = app.const.CELL;\n            this.statePlaying = null;\n            this.blockMoveDown = false;\n            this.CC = new app.FigureCollection(); // current figure\n            this.FC = new app.FigureCollection(); // array of filled cells\n\n            app.eventDispatcher.on('startPlay', this.startLoop, this);\n            $(window).on('keyup', this.keyUpController.bind(this));\n            $(window).on('keydown', this.keyDownController.bind(this));\n        },\n        render: function () {\n            if(!this.statePlaying)\n                return;\n\n            this.moveFigure();\n            this.draw();\n            this.check();\n        },\n\n        // set func\n        setCtx: function (config) {\n            if(config) {\n                this.ctx.fillStyle = config.fill_style || app.const.FILL_STYLE;\n                this.ctx.strokeStyle = config.stroke_style || app.const.STROKE_STYLE;\n            } else {\n                this.ctx.fillStyle = app.const.FILL_STYLE;\n                this.ctx.strokeStyle = app.const.STROKE_STYLE;\n            }\n        },\n        keyDownController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            if(e.keyCode == 40 && this.speed < app.const.SPEED_MAX) {\n                this.speed += app.const.SPEED_STEP;\n                this.play();\n            }\n        },\n        keyUpController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            var ctrl = e.ctrlKey;\n            if(ctrl) { // develop helpers\n                if(e.keyCode == 81) { // Q\n                    this.endLoop();\n                    this.startLoop();\n                }\n                if(e.keyCode == 88) { // X\n                    this.gameOver();\n                }\n            }\n            if(e.keyCode == 40) {\n                this.speed = app.const.SPEED_START;\n                this.play();\n            }\n\n            if(e.keyCode == 37) {\n                this.blockMoveDown = true;\n                this.moveFigure('left');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 39) {\n                this.blockMoveDown = true;\n                this.moveFigure('right');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 38) {\n                if(this.checkRotate()) {\n                    console.log('rotate');\n                }\n            }\n        },\n        gameOver: function () {\n            this.stop();\n            this.statePlaying = null;\n            app.eventDispatcher.trigger('gameover');\n            console.log('gameover');\n        },\n\n        // check func\n        // contain logic for collision\n        // right/left/bottom border\n        // check for gameover\n        checkLeft: function (collection) {\n            var cells = collection.where({left: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')-this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x') <= 0 || fillCell) {\n                    result = false;\n                    return true; // break _.each\n                }\n            }.bind(this));\n\n            return result;\n        },\n        checkRight: function (collection) {\n            var cells = collection.where({right: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')+this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x')+this.cellRect >= app.const.WIDTH || fillCell) {\n                    result = false;\n                    return true;\n                }\n            }.bind(this));\n\n            return result;\n        },\n        check: function () {\n            var cont = true; // continue?\n\n            // check for bottom border\n            this.CC.find(function (cell) {\n                if(cell.get('y')+this.cellRect == app.const.HEIGHT) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n                return;\n            }\n\n            // check for fill cells\n            this.CC.find(function (cell) {\n                var x = cell.get('x'), y = cell.get('y')+this.cellRect;\n\n                if(this.FC.findWhere({x: x, y: y})) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                // check for gameover\n                if(this.CC.findWhere({y: 0})) {\n                    this.gameOver();\n                } else {\n                    this.startLoop();\n                }\n            }\n        },\n        checkFillRow: function () {\n            var group = this.FC.groupBy('y');\n            _.each(group, function (arr, y) {\n                if(arr.length === app.const.ROW_WIDTH) {\n                    // this.removeFillRow(y);\n                    // this.checkFillRow();\n                }\n            }.bind(this));\n        },\n        checkRotate: function () {\n            if(this.CC.type == 'C') // cube is figure without rotate\n                return false;\n\n            var tmpCollection = new app.FigureCollection();\n            tmpCollection.add(this.CC.getNewArr());\n            if(this.checkLeft(tmpCollection) && this.checkRight(tmpCollection)) {\n                var no_valid_cell = tmpCollection.find(function (cell) {\n                    if(cell.get('y')+this.cellRect >= app.const.HEIGHT) {\n                        return cell;\n                    }\n                }.bind(this));\n\n                if(no_valid_cell)\n                    return;\n\n                this.CC.rotateSuccess();\n                tmpCollection.setCustom(this.CC.getCustom());\n                this.CC = tmpCollection;\n            }\n        },\n\n        // LOOP\n        startLoop: function () {\n            // var rand = app.classes.helper.getRandomInt(0, 4);\n            this.CC.createFigure(3);\n            this.play();\n        },\n        endLoop: function () {\n            this.CC.each(function (cell) {\n                this.FC.add(cell);\n            }.bind(this));\n            this.checkFillRow();\n        },\n        moveFigure: function (direct) {\n            if(direct == 'left') {\n                if(this.checkLeft(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')-this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false; // unblock move down\n            } else if(direct == 'right') {\n                if(this.checkRight(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')+this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false;\n            }\n            else if(!this.blockMoveDown) {\n                this.CC.each(function (cell) {\n                    cell.set('y', cell.get('y')+this.cellRect);\n                }.bind(this));\n            }\n        },\n        play: function () {\n            if(this.playId)\n                this.stop();\n            this.playId = setInterval(this.render.bind(this), 1000 / this.speed);\n            this.statePlaying = 'play'\n        },\n        stop: function () {\n            clearInterval(this.playId);\n        },\n\n        // Render func\n        draw: function () {\n            this.clear();\n            this.drawFigures();\n        },\n        drawFigures: function () {\n            this.CC.each(this.drawCell, this);\n            this.FC.each(this.drawCell, this);\n        },\n        drawCell: function (cell) {\n            var x = cell.get('x'),\n                y = cell.get('y');\n\n            this.ctx.strokeRect(x, y, this.cellRect-0.5, this.cellRect-0.5);\n            this.ctx.fillRect(x, y, this.cellRect-2, this.cellRect-2);\n        },\n        removeFillRow: function (y) {\n            var removeModels = this.FC.where({y: parseInt(y)});\n            console.log(removeModels);\n        },\n        clear: function () {\n            this.ctx.clearRect(0,0, app.const.WIDTH, app.const.HEIGHT);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    var Page = Backbone.View.extend({\n        el: '#page',\n\n        initialize: function () {\n            app.views = {};\n            app.models = {};\n            app.collections = {};\n            app.eventDispatcher = _.extend({}, Backbone.Events );\n\n            app.views.canvas = new app.CanvasView();\n\n            this.startPlay();\n        },\n        startPlay: function () {\n            app.eventDispatcher.trigger('startPlay');\n        }\n    });\n\n    $(document).ready(function () {\n        app.page = new Page();\n    });\n})();"]}