{"version":3,"sources":["Constants.js","Helper.js","Cell.js","FigureCollection.js","Canvas.js","Page.js"],"names":["app","const","WIDTH","HEIGHT","CELL","SPEED_START","SPEED_MAX","SPEED_STEP","SIZE_FIGURE","STROKE_STYLE","FILL_STYLE","REMOVE_CELL_ANIMATION_TIME","FIGURE_COLORS","I","C","L","RL","T","Z","RZ","r","c","ROW_WIDTH","FIGURE","x","y","left","center","right","TYPE_MAP","TRANSFORM_MAP","POSITION_MAP","classes","helper","getRandomInt","min","max","Math","floor","random","CellModel","Backbone","Model","extend","defaults","stroke","fill","FigureCollection","Collection","model","initialize","createFigure","intg","this","currentState","type","reset","setColor","each","cell","set","bind","getNewArr","data","position","map","l","tmp","i","item","_","isString","at","get","name","push","rotateSuccess","getCustom","setCustom","config","CanvasView","View","el","style","border","height","width","ctx","getContext","setCtx","speed","cellRect","statePlaying","blockMoveDown","removeRow","CC","FC","eventDispatcher","on","startLoop","$","window","keyUpController","keyDownController","render","moveFigure","draw","check","fillStyle","strokeStyle","e","keyCode","play","ctrl","ctrlKey","endLoop","gameOver","rotate","console","log","stop","gameOverState","trigger","checkLeft","collection","cells","where","result","fillCell","findWhere","checkRight","cont","find","checkFillRow","group","groupBy","row","arr","length","sortBy","removeFillRow","tmpCollection","add","no_valid_cell","rand","direct","playId","setInterval","clearInterval","clear","drawFigures","drawCell","strokeRect","fillRect","interval","remove","pop","clearRect","Page","views","models","collections","Events","canvas","startPlay","document","ready","page"],"mappings":"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","file":"main.min.js","sourcesContent":["var app = app || {};\n\n(function () {\n    app.const = {\n        // canvas\n        WIDTH: 240,\n        HEIGHT: 304,\n        CELL: 16,\n        SPEED_START: 3,\n        SPEED_MAX: 45,\n        SPEED_STEP: 10,\n        SIZE_FIGURE: 4,\n        STROKE_STYLE: '#000',\n        FILL_STYLE: '#333',\n        REMOVE_CELL_ANIMATION_TIME: 50, // ms\n\n        // figure colors\n        FIGURE_COLORS: {\n            I: ['#1464e5', '#3b6cba'], // fill\\stroke\n            C: ['#fc2d2d', '#bf1616'],\n            L: ['#f9921b', '#e87f06'],\n            RL: ['#e9fc1b', '#d5e80d'],\n            T: ['#6aed1e', '#5bd813'],\n            Z: ['#3afca8', '#20d888'],\n            RZ: ['#853ff4', '#6015d8']\n        }\n    };\n    var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n\n    // count cells in one row\n    app.const.ROW_WIDTH = app.const.WIDTH/r;\n\n    // figures\n    app.const.FIGURE = [\n        [\n            {x:(c-(r*2)), y:-r, left: true},\n            {x:(c-r), y:-r},\n            {x:c, y:-r, center: true},\n            {x:(c+r), y:-r, right: true}\n        ], // row\n        [\n            {x:(c-r), y:-(r*2), left: true},\n            {x:c, y:-(r*2), right: true},\n            {x:(c-r), y:-r, left: true},\n            {x:c, y:-r, right:true}\n        ], // rect\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, left: true},\n            {x:(c+r), y:-r, right: true}\n        ], // L\n        [\n            {x:c, y:-(r*3), left: true, right: true},\n            {x:c, y:-(r*2), left: true, right: true, center: true},\n            {x:c, y:-r, right: true},\n            {x:c-r, y:-r, left: true}\n        ], // RL\n        [\n            {x:c,y:0-r, right: true, left: true},\n            {x:(c-r),y:-(r*2) , left: true},\n            {x:c,y:0-(r*2), center: true},\n            {x:(c+r),y:-(r*2), right: true}\n        ], // T\n        [\n            {x:c-r, y: 0-(r*2), left: true},\n            {x:c, y: 0-(r*2), right: true, center: true},\n            {x:c, y: 0-r, left: true},\n            {x:c+r, y: 0-r, right: true}\n        ], // Z\n        [\n            {x: c+r, y: 0-(r*2), right: true},\n            {x: c, y: 0-(r*2), center: true, left: true},\n            {x: c, y: 0-r, right: true},\n            {x: c-r, y: 0-r, left: true}\n        ] // RZ\n    ];\n    app.const.TYPE_MAP = ['I', 'C', 'L', 'RL', 'T', 'Z', 'RZ'];\n    app.const.TRANSFORM_MAP = {\n        'I': [\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]],\n            [[2, -2], [1, -1], null, [-1, 1]],\n            [[-2, 2], [-1, 1], null, [1, -1]]\n        ],\n        'L': [\n            [[1, 1], null, [-1, -1], [-2, 0]],\n            [[-1, 1], null, [1, -1], [0, -2]],\n            [[-1, -1], null, [1, 1], [2, 0]],\n            [[1, -1], null, [-1, 1], [0, 2]]\n        ],\n        'RL': [\n            [[1, 1], null, [-1, -1], [0, -2]],\n            [[-1, 1], null, [1, -1], [2, 0]],\n            [[-1, -1], null, [1, 1], [0, 2]],\n            [[1, -1], null, [-1, 1], [-2, 0]]\n        ],\n        'T': [\n            ['1', [1, -1], null, '0'],\n            ['1', [1, 1], null, '0'],\n            ['1', [-1, 1], null, '0'],\n            ['1', [-1, -1], null, '0']\n        ],\n        'Z': [\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]],\n            [[1, -1], null, '0', [-2, 0]],\n            [[-1, 1], null, [1, 1], [2, 0]]\n        ],\n        'RZ': [\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]],\n            ['2', null, [-1, -1], [0, -2]],\n            [[1, -1], null, '0', [0, 2]]\n        ]\n    };\n    app.const.POSITION_MAP = {\n        'I': [\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r'],\n            [['l', 'r'], ['l', 'r'], ['l', 'r', 'c'], ['l', 'r']],\n            ['l', null, 'c', 'r']\n        ],\n        'L': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'r', 'l'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['l', 'r', 'c'], 'l', 'r']\n        ],\n        'RL': [\n            ['r', 'c', 'l', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r'],\n            ['l', 'c', 'r', ['l', 'r']],\n            [['l', 'r'], ['c', 'l', 'r'], 'l', 'r']\n        ],\n        'T': [\n            ['l', ['l', 'r'], ['c', 'r'], ['l', 'r']],\n            [['l', 'r'], 'r', 'c', 'l'],\n            ['r', ['l', 'r'], ['l', 'c'], ['l', 'r']],\n            [['l', 'r'], 'l', 'c', 'r']\n        ],\n        'Z': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['l', ['c', 'r'], 'l', 'r']\n        ],\n        'RZ': [\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l'],\n            [['l', 'r'], ['c', 'r'], 'l', ['l', 'r']],\n            ['r', ['c', 'l'], 'r', 'l']\n        ]\n    };\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    \n    app.classes = app.classes || {}; \n    \n    app.classes.helper = {\n        getRandomInt: function (min, max) {\n            return Math.floor(Math.random() * (max - min + 1)) + min;\n        }\n    };\n})();","var app = app || {};\n\n(function () {\n    'use strict';\n    app.CellModel = Backbone.Model.extend({\n        defaults: {\n            x: 0,\n            y: 0,\n            left: false,\n            right: false,\n            center: false,\n            stroke: '',\n            fill: ''\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.FigureCollection = Backbone.Collection.extend({\n        model: app.CellModel,\n        initialize: function () {\n\n        },\n        createFigure: function (intg) {\n            var r = app.const.CELL, c = (app.const.WIDTH/2)-(r/2);\n            this.currentState = 0;\n            this.type = app.const.TYPE_MAP[intg];\n            this.reset(app.const.FIGURE[intg]);\n            this.setColor();\n        },\n        setColor: function () {\n            this.each(function (cell) {\n                cell.set({\n                    'fill': app.const.FIGURE_COLORS[this.type][0],\n                    'stroke': app.const.FIGURE_COLORS[this.type][1]\n                });\n            }.bind(this));\n        },\n        getNewArr: function () {\n            if(this.currentState > 3)\n                this.currentState = 0;\n\n            var data = app.const.TRANSFORM_MAP[this.type][this.currentState];\n            var position = app.const.POSITION_MAP[this.type][this.currentState];\n            var map = {\n                'l': 'left',\n                'r': 'right',\n                'c': 'center'\n            };\n            var tmp = [];\n            var r = app.const.CELL;\n\n            this.each(function (cell, i) {\n                var item = {};\n\n                if(data[i]) {\n                    if(_.isString(data[i])) {\n                        item.x = this.at(data[i]).get('x');\n                        item.y = this.at(data[i]).get('y');\n                    } else {\n                        item.x = cell.get('x') + (data[i][0]*r);\n                        item.y = cell.get('y') + (data[i][1]*r);\n                    }\n                } else {\n                    item.x = cell.get('x');\n                    item.y = cell.get('y');\n                }\n\n                if(position[i]) {\n                    if(_.isString(position[i])) {\n                        item[map[position[i]]] = true;\n                    } else {\n                        _.each(position[i], function (name) {\n                            item[map[name]] = true;\n                        });\n                    }\n                }\n                tmp.push(item);\n            }.bind(this));\n\n            return tmp;\n        },\n        rotateSuccess: function () {\n            ++this.currentState;\n        },\n        getCustom: function () {\n            return {\n                type: this.type,\n                currentState: this.currentState\n            }\n        },\n        setCustom: function (config) {\n            this.type = config.type;\n            this.currentState = config.currentState;\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    app.CanvasView = Backbone.View.extend({\n        el: '#cnvs',\n        initialize: function () {\n            this.el.style.border = '1px solid #333';\n            this.el.height = app.const.HEIGHT;\n            this.el.width = app.const.WIDTH;\n\n            this.ctx = this.el.getContext(\"2d\");\n            this.setCtx();\n\n            this.speed = app.const.SPEED_START;\n            this.cellRect = app.const.CELL;\n            this.statePlaying = null;\n            this.blockMoveDown = false;\n            this.removeRow = false;\n            this.CC = new app.FigureCollection(); // current figure\n            this.FC = new app.FigureCollection(); // array of filled cells\n\n            app.eventDispatcher.on('startPlay removedFillRow', this.startLoop, this);\n            $(window).on('keyup', this.keyUpController.bind(this));\n            $(window).on('keydown', this.keyDownController.bind(this));\n        },\n        render: function () {\n            if(!this.statePlaying || this.removeRow)\n                return;\n\n            this.moveFigure();\n            this.draw();\n            this.check();\n        },\n\n        // set func\n        setCtx: function (cell) {\n            if(cell) {\n                this.ctx.fillStyle = cell.get('fill') || app.const.FILL_STYLE;\n                this.ctx.strokeStyle = cell.get('stroke') || app.const.STROKE_STYLE;\n            } else {\n                this.ctx.fillStyle = app.const.FILL_STYLE;\n                this.ctx.strokeStyle = app.const.STROKE_STYLE;\n            }\n        },\n        keyDownController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            if(e.keyCode == 40 && this.speed < app.const.SPEED_MAX) {\n                this.speed += app.const.SPEED_STEP;\n                this.play();\n            }\n        },\n        keyUpController: function (e) {\n            if(!this.statePlaying)\n                return;\n\n            var ctrl = e.ctrlKey;\n            if(ctrl) { // develop helpers\n                if(e.keyCode == 81) { // Q\n                    this.endLoop();\n                    if(!this.removeRow && this.statePlaying)\n                        this.startLoop();\n                }\n                if(e.keyCode == 88) { // X\n                    this.gameOver();\n                }\n            }\n            if(e.keyCode == 40) {\n                this.speed = app.const.SPEED_START;\n                this.play();\n            }\n\n            if(e.keyCode == 37) {\n                this.blockMoveDown = true;\n                this.moveFigure('left');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 39) {\n                this.blockMoveDown = true;\n                this.moveFigure('right');\n                this.blockMoveDown = false;\n            }\n            if(e.keyCode == 38) {\n                if(this.rotate()) {\n                    console.log('rotate');\n                }\n            }\n        },\n        gameOver: function () {\n            this.stop();\n            this.statePlaying = null;\n            this.removeRow = false;\n            this.gameOverState = true;\n            app.eventDispatcher.trigger('gameover');\n            console.log('gameover');\n        },\n\n        // check func\n        // contain logic for collision\n        // right/left/bottom border\n        // check for gameover\n        checkLeft: function (collection) {\n            var cells = collection.where({left: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')-this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x') <= 0 || fillCell) {\n                    result = false;\n                    return true; // break _.each\n                }\n            }.bind(this));\n\n            return result;\n        },\n        checkRight: function (collection) {\n            var cells = collection.where({right: true}), result = true;\n\n            _.each(cells, function (cell) {\n                var fillCell = this.FC.findWhere({\n                    x: cell.get('x')+this.cellRect,\n                    y: cell.get('y')\n                });\n\n                if(cell.get('x')+this.cellRect >= app.const.WIDTH || fillCell) {\n                    result = false;\n                    return true;\n                }\n            }.bind(this));\n\n            return result;\n        },\n        check: function () {\n            var cont = true; // continue?\n\n            // check for bottom border\n            this.CC.find(function (cell) {\n                if(cell.get('y')+this.cellRect == app.const.HEIGHT) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n                return;\n            }\n\n            // check for fill cells\n            this.CC.find(function (cell) {\n                var x = cell.get('x'), y = cell.get('y')+this.cellRect;\n\n                if(this.FC.findWhere({x: x, y: y})) {\n                    cont = false;\n                    return cell;\n                }\n            }.bind(this));\n\n            if(!cont) {\n                this.endLoop();\n                this.startLoop();\n            }\n        },\n        checkFillRow: function () {\n            var group = this.FC.groupBy('y');\n            var row = _.find(group, function (arr) {\n                return arr.length >= app.const.ROW_WIDTH;\n            });\n            if(row) {\n                // TODO: sort wrong\n                row = _.sortBy(row, 'x');\n                this.removeFillRow(row);\n            } else {\n                this.removeRow = false;\n                app.eventDispatcher.trigger('removedFillRow');\n            }\n        },\n        rotate: function () {\n            if(this.CC.type == 'C') // cube is figure without rotate\n                return false;\n\n            var tmpCollection = new app.FigureCollection();\n            tmpCollection.add(this.CC.getNewArr());\n            if(this.checkLeft(tmpCollection) && this.checkRight(tmpCollection)) {\n                var no_valid_cell = tmpCollection.find(function (cell) {\n                    if(cell.get('y')+this.cellRect >= app.const.HEIGHT) {\n                        return cell;\n                    }\n                }.bind(this));\n\n                if(no_valid_cell)\n                    return;\n\n                this.CC.rotateSuccess();\n                tmpCollection.setCustom(this.CC.getCustom());\n                tmpCollection.setColor();\n                this.CC = tmpCollection;\n            }\n        },\n\n        // LOOP\n        startLoop: function () {\n            if(this.removeRow || this.gameOverState)\n                return;\n            var rand = app.classes.helper.getRandomInt(0, 6);\n            this.CC.createFigure(rand);\n            this.play();\n        },\n        endLoop: function () {\n            if(this.CC.find(function (cell) { return cell.get('y') <= 0; })) {\n                this.gameOver();\n            }\n            this.CC.each(function (cell) {\n                this.FC.add(cell);\n            }.bind(this));\n            this.checkFillRow();\n        },\n        moveFigure: function (direct) {\n            if(direct == 'left') {\n                if(this.checkLeft(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')-this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false; // unblock move down\n            } else if(direct == 'right') {\n                if(this.checkRight(this.CC)) {\n                    this.CC.each(function (cell) {\n                        cell.set('x', cell.get('x')+this.cellRect);\n                    }.bind(this));\n                } else\n                    this.blockMoveDown = false;\n            }\n            else if(!this.blockMoveDown) {\n                this.CC.each(function (cell) {\n                    cell.set('y', cell.get('y')+this.cellRect);\n                }.bind(this));\n            }\n        },\n        play: function () {\n            if(this.playId)\n                this.stop();\n            this.playId = setInterval(this.render.bind(this), 1000 / this.speed);\n            this.statePlaying = 'play'\n        },\n        stop: function () {\n            clearInterval(this.playId);\n        },\n\n        // Render func\n        draw: function () {\n            this.clear();\n            this.drawFigures();\n        },\n        drawFigures: function () {\n            this.CC.each(this.drawCell, this);\n            this.FC.each(this.drawCell, this);\n        },\n        drawCell: function (cell) {\n            var x = cell.get('x'),\n                y = cell.get('y');\n            this.setCtx(cell);\n            this.ctx.strokeRect(x, y, this.cellRect-0.5, this.cellRect-0.5);\n            this.ctx.fillRect(x, y, this.cellRect-2, this.cellRect-2);\n        },\n        removeFillRow: function (row) {\n            // if(!this.statePlaying) {\n            //     this.removeRow = false;\n            //     return;\n            // }\n            this.removeRow = true;\n            var y = row[0].get('y');\n            var interval = setInterval(function () {\n                this.clear();\n                if(!row.length) {\n                    clearInterval(interval);\n                    this.FC.each(function (cell) {\n                        if(cell.get('y')<y)\n                            cell.set('y', cell.get('y')+this.cellRect);\n                    }.bind(this));\n                    this.FC.each(this.drawCell, this);\n                    this.checkFillRow();\n                    return;\n                }\n\n                this.FC.remove(row[row.length-1]);\n                this.FC.each(this.drawCell, this);\n                row.pop();\n            }.bind(this), app.const.REMOVE_CELL_ANIMATION_TIME);\n            this.stop();\n        },\n        clear: function () {\n            this.ctx.clearRect(0,0, app.const.WIDTH, app.const.HEIGHT);\n        }\n    });\n})();","var app = app || {};\n\n(function () {\n    \"use strict\";\n    var Page = Backbone.View.extend({\n        el: '#page',\n\n        initialize: function () {\n            app.views = {};\n            app.models = {};\n            app.collections = {};\n            app.eventDispatcher = _.extend({}, Backbone.Events );\n\n            app.views.canvas = new app.CanvasView();\n\n            this.startPlay();\n        },\n        startPlay: function () {\n            app.eventDispatcher.trigger('startPlay');\n        }\n    });\n\n    $(document).ready(function () {\n        app.page = new Page();\n    });\n})();"]}